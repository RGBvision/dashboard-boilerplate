<?php

class TP_yyToken implements ArrayAccess
{
	public $string = '';
	public $metadata = array();

	public function __construct($s, $m = array())
	{
		if ($s instanceof TP_yyToken) {
			$this->string = $s->string;
			$this->metadata = $s->metadata;
		} else {
			$this->string = (string)$s;
			if ($m instanceof TP_yyToken) {
				$this->metadata = $m->metadata;
			} else if (is_array($m)) {
				$this->metadata = $m;
			}
		}
	}

	public function __toString()
	{
		return $this->string;
	}

	public function offsetExists($offset)
	{
		return isset($this->metadata[$offset]);
	}

	public function offsetGet($offset)
	{
		return $this->metadata[$offset];
	}

	public function offsetSet($offset, $value)
	{
		if ($offset === null) {
			if (isset($value[0])) {
				$x = ($value instanceof TP_yyToken) ?
					$value->metadata : $value;
				$this->metadata = array_merge($this->metadata, $x);
				return;
			}
			$offset = count($this->metadata);
		}
		if ($value === null) {
			return;
		}
		if ($value instanceof TP_yyToken) {
			if ($value->metadata) {
				$this->metadata[$offset] = $value->metadata;
			}
		} else if ($value) {
			$this->metadata[$offset] = $value;
		}
	}

	public function offsetUnset($offset)
	{
		unset($this->metadata[$offset]);
	}
}

class TP_yyStackEntry
{
	public $stateno;       /* The state-number */
	public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
	public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
}

;
#line 11 "../smarty/lexer/smarty_internal_templateparser.y"

/**
 * Smarty Template Parser Class
 *
 * This is the template parser.
 * It is generated from the smarty_internal_templateparser.y file
 *
 * @author Uwe Tews <uwe.tews@googlemail.com>
 */
class Smarty_Internal_Templateparser
{
	#line 23 "../smarty/lexer/smarty_internal_templateparser.y"
	const Err1 = 'Security error: Call to private object member not allowed';
	const Err2 = 'Security error: Call to dynamic object member not allowed';
	const Err3 = 'PHP in template not allowed. Use SmartyBC to enable it';
	const TP_VERT = 1;
	const TP_COLON = 2;
	const TP_UNIMATH = 3;
	const TP_PHP = 4;
	const TP_TEXT = 5;
	const TP_STRIPON = 6;
	const TP_STRIPOFF = 7;
	const TP_LITERALSTART = 8;
	const TP_LITERALEND = 9;
	const TP_LITERAL = 10;
	const TP_RDEL = 11;
	const TP_SIMPELOUTPUT = 12;
	const TP_LDEL = 13;
	const TP_DOLLARID = 14;
	const TP_EQUAL = 15;
	const TP_SIMPLETAG = 16;
	const TP_ID = 17;
	const TP_PTR = 18;
	const TP_LDELMAKENOCACHE = 19;
	const TP_LDELIF = 20;
	const TP_LDELFOR = 21;
	const TP_SEMICOLON = 22;
	const TP_INCDEC = 23;
	const TP_TO = 24;
	const TP_STEP = 25;
	const TP_LDELFOREACH = 26;
	const TP_SPACE = 27;
	const TP_AS = 28;
	const TP_APTR = 29;
	const TP_LDELSETFILTER = 30;
	const TP_CLOSETAG = 31;
	const TP_LDELSLASH = 32;
	const TP_ATTR = 33;
	const TP_INTEGER = 34;
	const TP_COMMA = 35;
	const TP_OPENP = 36;
	const TP_CLOSEP = 37;
	const TP_MATH = 38;
	const TP_ISIN = 39;
	const TP_QMARK = 40;
	const TP_NOT = 41;
	const TP_TYPECAST = 42;
	const TP_HEX = 43;
	const TP_DOT = 44;
	const TP_INSTANCEOF = 45;
	const TP_SINGLEQUOTESTRING = 46;
	const TP_DOUBLECOLON = 47;
	const TP_NAMESPACE = 48;
	const TP_AT = 49;
	const TP_HATCH = 50;
	const TP_OPENB = 51;
	const TP_CLOSEB = 52;
	const TP_DOLLAR = 53;
	const TP_LOGOP = 54;
	const TP_SLOGOP = 55;
	const TP_TLOGOP = 56;
	const TP_SINGLECOND = 57;
	const TP_QUOTE = 58;
	const TP_BACKTICK = 59;
	const YY_NO_ACTION = 521;
	const YY_ACCEPT_ACTION = 520;
	const YY_ERROR_ACTION = 519;
	const YY_SZ_ACTTAB = 2057;
	const YY_SHIFT_USE_DFLT = -30;
	const YY_SHIFT_MAX = 231;
	const YY_REDUCE_USE_DFLT = -68;
	const YY_REDUCE_MAX = 185;
	const YYNOCODE = 106;
	const YYSTACKDEPTH = 500;
	const YYNSTATE = 327;
	const YYNRULE = 192;
	const YYERRORSYMBOL = 60;
	const YYERRSYMDT = 'yy0';
	const YYFALLBACK = 0;
	static public $yy_action = array(
		41, 464, 464, 306, 18, 189, 464, 122, 300, 258,
		36, 130, 99, 260, 190, 134, 213, 7, 83, 15,
		295, 269, 8, 110, 293, 312, 435, 214, 256, 212,
		38, 198, 305, 33, 136, 305, 25, 435, 40, 39,
		316, 208, 11, 215, 296, 205, 25, 81, 1, 270,
		296, 41, 11, 232, 78, 79, 89, 78, 464, 464,
		258, 36, 132, 464, 260, 197, 219, 213, 7, 83,
		122, 284, 267, 296, 110, 99, 204, 436, 214, 256,
		212, 347, 216, 305, 33, 210, 391, 293, 436, 40,
		39, 316, 208, 305, 323, 464, 205, 25, 81, 1,
		41, 296, 391, 11, 97, 78, 79, 16, 391, 258,
		36, 131, 304, 260, 197, 78, 213, 7, 83, 290,
		244, 245, 230, 110, 27, 227, 237, 214, 256, 212,
		2, 216, 22, 33, 133, 157, 166, 207, 40, 39,
		316, 208, 204, 323, 448, 205, 263, 81, 1, 41,
		296, 448, 388, 20, 225, 79, 251, 162, 258, 36,
		132, 206, 260, 186, 182, 213, 7, 83, 388, 97,
		81, 182, 110, 296, 388, 145, 214, 256, 212, 91,
		216, 217, 33, 223, 200, 263, 102, 40, 39, 316,
		208, 204, 323, 296, 205, 134, 81, 1, 41, 296,
		13, 349, 8, 181, 79, 268, 17, 258, 36, 129,
		265, 260, 80, 90, 213, 7, 83, 25, 204, 34,
		204, 110, 97, 11, 435, 214, 256, 212, 313, 216,
		353, 33, 226, 227, 204, 435, 40, 39, 316, 208,
		302, 323, 231, 205, 25, 81, 1, 41, 296, 24,
		11, 107, 97, 79, 268, 17, 258, 36, 132, 265,
		260, 188, 14, 213, 7, 83, 294, 85, 324, 309,
		110, 177, 271, 168, 214, 256, 212, 88, 203, 234,
		33, 107, 27, 263, 241, 40, 39, 316, 208, 141,
		323, 211, 205, 179, 81, 1, 41, 296, 147, 263,
		204, 181, 79, 23, 9, 258, 36, 132, 263, 260,
		192, 266, 213, 7, 83, 268, 17, 181, 296, 110,
		265, 264, 154, 214, 256, 212, 313, 216, 101, 33,
		3, 227, 263, 448, 40, 39, 316, 208, 305, 323,
		448, 205, 150, 81, 1, 41, 296, 321, 158, 206,
		182, 79, 263, 435, 258, 36, 128, 303, 260, 197,
		78, 213, 7, 83, 435, 264, 274, 27, 110, 233,
		5, 93, 214, 256, 212, 242, 216, 169, 4, 137,
		97, 109, 179, 40, 39, 316, 208, 204, 323, 144,
		205, 264, 81, 1, 41, 296, 204, 178, 252, 243,
		79, 181, 267, 258, 36, 133, 181, 260, 197, 107,
		213, 7, 83, 222, 217, 160, 262, 110, 296, 102,
		102, 214, 256, 212, 171, 216, 217, 12, 220, 280,
		159, 102, 40, 39, 316, 208, 116, 323, 281, 205,
		263, 81, 1, 41, 296, 173, 271, 176, 138, 79,
		175, 271, 258, 36, 132, 164, 260, 197, 263, 213,
		7, 83, 19, 172, 254, 263, 110, 253, 11, 167,
		214, 256, 212, 273, 187, 174, 33, 24, 228, 263,
		116, 40, 39, 316, 208, 235, 323, 181, 205, 103,
		81, 1, 41, 296, 204, 38, 153, 163, 79, 264,
		206, 258, 36, 133, 170, 260, 197, 310, 213, 7,
		83, 464, 464, 257, 184, 110, 464, 448, 299, 214,
		256, 212, 261, 216, 84, 12, 106, 311, 181, 121,
		40, 39, 316, 208, 292, 323, 315, 205, 35, 81,
		320, 156, 296, 448, 268, 17, 448, 79, 464, 265,
		448, 6, 246, 248, 249, 250, 178, 301, 317, 25,
		258, 36, 180, 224, 260, 11, 255, 213, 7, 83,
		2, 42, 32, 277, 110, 31, 247, 309, 214, 256,
		212, 401, 401, 401, 279, 259, 181, 92, 152, 227,
		194, 299, 105, 67, 108, 148, 264, 86, 299, 99,
		87, 135, 314, 289, 113, 155, 299, 322, 195, 272,
		299, 293, 299, 299, 299, 161, 435, 325, 401, 401,
		299, 196, 318, 299, 258, 28, 298, 435, 260, 299,
		299, 213, 7, 83, 401, 401, 401, 401, 110, 299,
		299, 299, 214, 256, 212, 268, 17, 299, 299, 279,
		265, 299, 299, 299, 227, 194, 299, 120, 70, 108,
		25, 204, 149, 44, 99, 142, 11, 314, 289, 180,
		276, 10, 322, 195, 272, 263, 293, 299, 42, 32,
		277, 299, 279, 202, 299, 299, 299, 227, 194, 299,
		105, 67, 108, 181, 299, 299, 299, 99, 43, 37,
		314, 289, 299, 299, 299, 322, 195, 272, 299, 293,
		299, 299, 283, 299, 285, 286, 287, 288, 299, 279,
		319, 299, 299, 299, 227, 194, 299, 120, 58, 100,
		299, 220, 299, 299, 99, 140, 299, 314, 289, 180,
		299, 299, 322, 195, 272, 263, 293, 279, 42, 32,
		277, 299, 227, 194, 299, 120, 70, 108, 299, 299,
		299, 299, 99, 181, 299, 314, 289, 299, 325, 299,
		322, 195, 272, 299, 293, 258, 28, 298, 299, 260,
		299, 199, 213, 7, 83, 299, 299, 389, 299, 110,
		299, 218, 279, 214, 256, 212, 299, 227, 194, 299,
		120, 70, 108, 389, 299, 299, 299, 99, 299, 389,
		314, 289, 435, 299, 299, 322, 195, 272, 299, 293,
		299, 275, 10, 435, 204, 299, 201, 299, 299, 299,
		279, 299, 299, 299, 359, 227, 194, 299, 120, 47,
		100, 221, 112, 299, 299, 99, 299, 299, 314, 289,
		25, 299, 299, 322, 195, 272, 11, 293, 279, 435,
		299, 299, 299, 227, 194, 299, 120, 68, 108, 299,
		435, 299, 299, 99, 299, 299, 314, 289, 299, 299,
		299, 322, 195, 272, 279, 293, 204, 299, 44, 227,
		191, 299, 120, 61, 108, 299, 240, 299, 299, 99,
		299, 299, 314, 289, 299, 299, 299, 322, 195, 272,
		279, 293, 299, 299, 299, 227, 194, 299, 120, 48,
		108, 299, 299, 43, 37, 99, 299, 299, 314, 289,
		299, 299, 299, 322, 195, 272, 299, 293, 279, 285,
		286, 287, 288, 227, 194, 299, 120, 75, 108, 299,
		299, 299, 299, 99, 299, 299, 314, 289, 299, 299,
		299, 322, 195, 272, 279, 293, 299, 299, 299, 227,
		194, 299, 120, 45, 108, 299, 299, 299, 299, 99,
		299, 299, 314, 289, 299, 299, 299, 322, 195, 272,
		279, 293, 299, 299, 299, 227, 193, 299, 114, 62,
		108, 299, 204, 299, 44, 99, 143, 299, 314, 289,
		180, 299, 299, 322, 195, 272, 263, 293, 279, 42,
		32, 277, 299, 227, 94, 299, 82, 51, 104, 299,
		299, 299, 299, 99, 181, 299, 314, 289, 299, 43,
		37, 322, 195, 272, 279, 293, 299, 299, 299, 227,
		194, 299, 120, 65, 108, 285, 286, 287, 288, 99,
		297, 299, 314, 289, 299, 299, 299, 322, 195, 272,
		279, 293, 299, 299, 299, 227, 194, 299, 120, 58,
		108, 299, 204, 299, 44, 99, 165, 299, 314, 289,
		180, 299, 185, 322, 195, 272, 263, 293, 279, 42,
		32, 277, 299, 227, 194, 299, 96, 64, 108, 299,
		299, 299, 299, 99, 181, 299, 314, 289, 299, 43,
		37, 322, 195, 272, 279, 293, 204, 299, 44, 227,
		194, 299, 120, 71, 108, 285, 286, 287, 288, 99,
		299, 299, 314, 289, 299, 299, 299, 322, 195, 272,
		279, 293, 299, 299, 299, 227, 194, 299, 120, 73,
		108, 299, 239, 43, 37, 99, 299, 299, 314, 289,
		299, 299, 299, 322, 195, 272, 299, 293, 279, 285,
		286, 287, 288, 227, 194, 299, 120, 63, 108, 299,
		299, 299, 299, 99, 299, 299, 314, 289, 299, 299,
		299, 322, 195, 272, 279, 293, 204, 21, 44, 227,
		194, 299, 120, 74, 108, 299, 299, 299, 299, 99,
		299, 299, 314, 289, 299, 299, 299, 322, 195, 272,
		279, 293, 299, 299, 299, 227, 194, 299, 98, 55,
		108, 299, 299, 43, 37, 99, 299, 299, 314, 289,
		299, 299, 299, 322, 195, 272, 299, 293, 279, 285,
		286, 287, 288, 227, 194, 299, 98, 72, 108, 299,
		299, 299, 299, 99, 299, 299, 314, 289, 299, 299,
		299, 322, 195, 272, 279, 293, 204, 299, 44, 227,
		194, 299, 120, 57, 108, 299, 299, 299, 299, 99,
		299, 299, 314, 289, 299, 299, 299, 322, 195, 272,
		279, 293, 299, 299, 299, 227, 194, 299, 120, 50,
		108, 299, 229, 43, 37, 99, 299, 299, 314, 289,
		299, 299, 299, 322, 195, 272, 299, 293, 279, 285,
		286, 287, 288, 227, 194, 299, 120, 60, 108, 299,
		299, 299, 299, 99, 299, 299, 314, 289, 299, 299,
		299, 322, 195, 272, 279, 293, 204, 299, 44, 227,
		194, 299, 120, 54, 108, 299, 183, 299, 299, 99,
		299, 299, 314, 289, 299, 299, 299, 322, 195, 272,
		279, 293, 299, 299, 299, 227, 194, 299, 120, 56,
		108, 299, 299, 43, 37, 99, 299, 299, 314, 289,
		299, 299, 299, 322, 195, 272, 299, 293, 279, 285,
		286, 287, 288, 227, 95, 299, 82, 46, 104, 299,
		299, 299, 299, 99, 299, 299, 314, 289, 299, 299,
		299, 322, 195, 272, 279, 293, 204, 299, 44, 227,
		194, 299, 120, 66, 108, 299, 299, 299, 299, 99,
		299, 299, 314, 289, 299, 299, 299, 322, 195, 272,
		279, 293, 299, 151, 299, 227, 194, 299, 115, 49,
		108, 299, 299, 43, 37, 99, 299, 299, 314, 289,
		299, 299, 299, 322, 195, 272, 299, 293, 279, 285,
		286, 287, 288, 227, 194, 299, 120, 69, 108, 299,
		299, 299, 299, 99, 299, 299, 314, 289, 299, 299,
		299, 322, 195, 272, 279, 293, 204, 299, 44, 227,
		194, 299, 120, 77, 108, 299, 236, 299, 299, 99,
		299, 299, 314, 289, 299, 299, 299, 322, 195, 272,
		279, 293, 299, 299, 299, 227, 194, 299, 120, 53,
		108, 299, 299, 43, 37, 99, 299, 299, 314, 289,
		299, 299, 299, 322, 195, 272, 299, 293, 279, 285,
		286, 287, 288, 227, 194, 299, 120, 59, 108, 299,
		44, 299, 299, 99, 299, 299, 314, 289, 204, 299,
		44, 322, 195, 272, 279, 293, 299, 299, 291, 227,
		194, 299, 120, 76, 108, 299, 299, 299, 299, 99,
		299, 299, 314, 289, 25, 43, 37, 322, 195, 272,
		11, 293, 204, 299, 44, 43, 37, 299, 299, 299,
		299, 285, 286, 287, 288, 299, 299, 299, 299, 299,
		299, 285, 286, 287, 288, 299, 26, 299, 25, 299,
		299, 299, 139, 299, 11, 299, 180, 299, 133, 43,
		37, 307, 263, 299, 279, 42, 32, 277, 299, 227,
		194, 299, 124, 299, 108, 285, 286, 287, 288, 99,
		181, 299, 299, 278, 299, 299, 299, 322, 195, 272,
		279, 293, 308, 299, 81, 227, 194, 296, 126, 299,
		108, 299, 299, 299, 299, 99, 299, 299, 299, 238,
		299, 299, 299, 322, 195, 272, 299, 293, 299, 279,
		299, 204, 299, 44, 227, 194, 299, 119, 299, 108,
		299, 299, 299, 299, 99, 299, 299, 299, 299, 299,
		299, 299, 322, 195, 272, 299, 293, 25, 299, 299,
		299, 299, 299, 11, 299, 279, 299, 299, 43, 37,
		227, 194, 299, 117, 299, 108, 299, 299, 299, 299,
		99, 299, 299, 299, 285, 286, 287, 288, 322, 195,
		272, 299, 293, 299, 299, 299, 279, 299, 299, 299,
		299, 227, 194, 299, 125, 299, 108, 299, 299, 299,
		299, 99, 299, 299, 299, 299, 299, 299, 299, 322,
		195, 272, 279, 293, 209, 299, 299, 227, 194, 299,
		118, 299, 108, 299, 464, 464, 299, 99, 299, 464,
		448, 299, 209, 299, 299, 322, 195, 272, 299, 293,
		299, 299, 464, 464, 299, 29, 299, 464, 448, 299,
		204, 299, 44, 299, 299, 299, 448, 299, 299, 448,
		299, 464, 299, 448, 282, 299, 299, 299, 299, 299,
		299, 111, 299, 299, 448, 299, 299, 448, 299, 464,
		209, 448, 299, 299, 299, 299, 299, 43, 37, 299,
		464, 464, 279, 9, 299, 464, 448, 227, 194, 299,
		127, 299, 108, 285, 286, 287, 288, 99, 299, 299,
		299, 299, 299, 299, 299, 322, 195, 272, 299, 293,
		299, 299, 448, 299, 299, 448, 279, 464, 209, 448,
		299, 227, 194, 299, 123, 299, 108, 299, 464, 464,
		299, 99, 299, 464, 448, 299, 30, 299, 299, 322,
		195, 272, 204, 293, 44, 299, 464, 464, 299, 299,
		299, 464, 448, 299, 520, 52, 326, 244, 245, 230,
		448, 299, 227, 448, 299, 464, 299, 448, 299, 299,
		299, 299, 299, 299, 299, 299, 299, 395, 448, 43,
		37, 448, 299, 464, 299, 448, 299, 299, 395, 299,
		395, 299, 299, 395, 299, 285, 286, 287, 288, 395,
		299, 395, 299, 395, 299, 299, 299, 299, 146, 299,
		206, 299, 180, 299, 299, 299, 299, 299, 263, 299,
		299, 42, 32, 277, 299, 299, 299, 299, 299, 299,
		299, 299, 299, 299, 299, 299, 181,
	);
	static public $yy_lookahead = array(
		3, 12, 13, 70, 13, 14, 17, 74, 17, 12,
		13, 14, 79, 16, 17, 44, 19, 20, 21, 29,
		11, 88, 51, 26, 91, 34, 36, 30, 31, 32,
		2, 34, 23, 36, 14, 23, 27, 47, 41, 42,
		43, 44, 33, 46, 53, 48, 27, 50, 51, 52,
		53, 3, 33, 17, 45, 58, 36, 45, 12, 13,
		12, 13, 14, 17, 16, 17, 70, 19, 20, 21,
		74, 59, 100, 53, 26, 79, 1, 36, 30, 31,
		32, 11, 34, 23, 36, 49, 11, 91, 47, 41,
		42, 43, 44, 23, 46, 49, 48, 27, 50, 51,
		3, 53, 27, 33, 18, 45, 58, 13, 33, 12,
		13, 14, 52, 16, 17, 45, 19, 20, 21, 63,
		64, 65, 66, 26, 35, 69, 37, 30, 31, 32,
		36, 34, 15, 36, 14, 92, 71, 17, 41, 42,
		43, 44, 1, 46, 44, 48, 81, 50, 51, 3,
		53, 51, 11, 13, 14, 58, 9, 17, 12, 13,
		14, 44, 16, 17, 99, 19, 20, 21, 27, 18,
		50, 99, 26, 53, 33, 71, 30, 31, 32, 75,
		34, 74, 36, 76, 77, 81, 79, 41, 42, 43,
		44, 1, 46, 53, 48, 44, 50, 51, 3, 53,
		22, 11, 51, 99, 58, 12, 13, 12, 13, 14,
		17, 16, 17, 35, 19, 20, 21, 27, 1, 15,
		1, 26, 18, 33, 36, 30, 31, 32, 64, 34,
		11, 36, 44, 69, 1, 47, 41, 42, 43, 44,
		52, 46, 49, 48, 27, 50, 51, 3, 53, 15,
		33, 47, 18, 58, 12, 13, 12, 13, 14, 17,
		16, 17, 29, 19, 20, 21, 96, 103, 104, 93,
		26, 95, 96, 71, 30, 31, 32, 75, 34, 14,
		36, 47, 35, 81, 37, 41, 42, 43, 44, 71,
		46, 49, 48, 75, 50, 51, 3, 53, 71, 81,
		1, 99, 58, 15, 15, 12, 13, 14, 81, 16,
		17, 23, 19, 20, 21, 12, 13, 99, 53, 26,
		17, 94, 71, 30, 31, 32, 64, 34, 67, 36,
		35, 69, 81, 44, 41, 42, 43, 44, 23, 46,
		51, 48, 71, 50, 51, 3, 53, 52, 92, 44,
		99, 58, 81, 36, 12, 13, 14, 52, 16, 17,
		45, 19, 20, 21, 47, 94, 104, 35, 26, 37,
		36, 80, 30, 31, 32, 17, 34, 75, 36, 14,
		18, 47, 75, 41, 42, 43, 44, 1, 46, 92,
		48, 94, 50, 51, 3, 53, 1, 8, 9, 10,
		58, 99, 100, 12, 13, 14, 99, 16, 17, 47,
		19, 20, 21, 18, 74, 74, 76, 26, 53, 79,
		79, 30, 31, 32, 80, 34, 74, 36, 76, 90,
		71, 79, 41, 42, 43, 44, 97, 46, 52, 48,
		81, 50, 51, 3, 53, 95, 96, 80, 71, 58,
		95, 96, 12, 13, 14, 71, 16, 17, 81, 19,
		20, 21, 27, 75, 65, 81, 26, 68, 33, 71,
		30, 31, 32, 90, 34, 14, 36, 15, 17, 81,
		97, 41, 42, 43, 44, 17, 46, 99, 48, 79,
		50, 51, 3, 53, 1, 2, 50, 92, 58, 94,
		44, 12, 13, 14, 75, 16, 17, 97, 19, 20,
		21, 12, 13, 37, 17, 26, 17, 18, 52, 30,
		31, 32, 14, 34, 17, 36, 17, 17, 99, 17,
		41, 42, 43, 44, 17, 46, 17, 48, 24, 50,
		34, 50, 53, 44, 12, 13, 47, 58, 49, 17,
		51, 36, 4, 5, 6, 7, 8, 52, 34, 27,
		12, 13, 75, 17, 16, 33, 11, 19, 20, 21,
		36, 84, 85, 86, 26, 40, 5, 93, 30, 31,
		32, 1, 2, 3, 64, 81, 99, 92, 92, 69,
		70, 105, 72, 73, 74, 92, 94, 79, 105, 79,
		79, 79, 82, 83, 78, 92, 105, 87, 88, 89,
		105, 91, 105, 105, 105, 92, 36, 5, 38, 39,
		105, 101, 102, 105, 12, 13, 14, 47, 16, 105,
		105, 19, 20, 21, 54, 55, 56, 57, 26, 105,
		105, 105, 30, 31, 32, 12, 13, 105, 105, 64,
		17, 105, 105, 105, 69, 70, 105, 72, 73, 74,
		27, 1, 29, 3, 79, 71, 33, 82, 83, 75,
		58, 59, 87, 88, 89, 81, 91, 105, 84, 85,
		86, 105, 64, 98, 105, 105, 105, 69, 70, 105,
		72, 73, 74, 99, 105, 105, 105, 79, 38, 39,
		82, 83, 105, 105, 105, 87, 88, 89, 105, 91,
		105, 105, 52, 105, 54, 55, 56, 57, 105, 64,
		102, 105, 105, 105, 69, 70, 105, 72, 73, 74,
		105, 76, 105, 105, 79, 71, 105, 82, 83, 75,
		105, 105, 87, 88, 89, 81, 91, 64, 84, 85,
		86, 105, 69, 70, 105, 72, 73, 74, 105, 105,
		105, 105, 79, 99, 105, 82, 83, 105, 5, 105,
		87, 88, 89, 105, 91, 12, 13, 14, 105, 16,
		105, 98, 19, 20, 21, 105, 105, 11, 105, 26,
		105, 15, 64, 30, 31, 32, 105, 69, 70, 105,
		72, 73, 74, 27, 105, 105, 105, 79, 105, 33,
		82, 83, 36, 105, 105, 87, 88, 89, 105, 91,
		105, 58, 59, 47, 1, 105, 98, 105, 105, 105,
		64, 105, 105, 105, 11, 69, 70, 105, 72, 73,
		74, 18, 76, 105, 105, 79, 105, 105, 82, 83,
		27, 105, 105, 87, 88, 89, 33, 91, 64, 36,
		105, 105, 105, 69, 70, 105, 72, 73, 74, 105,
		47, 105, 105, 79, 105, 105, 82, 83, 105, 105,
		105, 87, 88, 89, 64, 91, 1, 105, 3, 69,
		70, 105, 72, 73, 74, 105, 11, 105, 105, 79,
		105, 105, 82, 83, 105, 105, 105, 87, 88, 89,
		64, 91, 105, 105, 105, 69, 70, 105, 72, 73,
		74, 105, 105, 38, 39, 79, 105, 105, 82, 83,
		105, 105, 105, 87, 88, 89, 105, 91, 64, 54,
		55, 56, 57, 69, 70, 105, 72, 73, 74, 105,
		105, 105, 105, 79, 105, 105, 82, 83, 105, 105,
		105, 87, 88, 89, 64, 91, 105, 105, 105, 69,
		70, 105, 72, 73, 74, 105, 105, 105, 105, 79,
		105, 105, 82, 83, 105, 105, 105, 87, 88, 89,
		64, 91, 105, 105, 105, 69, 70, 105, 72, 73,
		74, 105, 1, 105, 3, 79, 71, 105, 82, 83,
		75, 105, 105, 87, 88, 89, 81, 91, 64, 84,
		85, 86, 105, 69, 70, 105, 72, 73, 74, 105,
		105, 105, 105, 79, 99, 105, 82, 83, 105, 38,
		39, 87, 88, 89, 64, 91, 105, 105, 105, 69,
		70, 105, 72, 73, 74, 54, 55, 56, 57, 79,
		59, 105, 82, 83, 105, 105, 105, 87, 88, 89,
		64, 91, 105, 105, 105, 69, 70, 105, 72, 73,
		74, 105, 1, 105, 3, 79, 71, 105, 82, 83,
		75, 105, 11, 87, 88, 89, 81, 91, 64, 84,
		85, 86, 105, 69, 70, 105, 72, 73, 74, 105,
		105, 105, 105, 79, 99, 105, 82, 83, 105, 38,
		39, 87, 88, 89, 64, 91, 1, 105, 3, 69,
		70, 105, 72, 73, 74, 54, 55, 56, 57, 79,
		105, 105, 82, 83, 105, 105, 105, 87, 88, 89,
		64, 91, 105, 105, 105, 69, 70, 105, 72, 73,
		74, 105, 37, 38, 39, 79, 105, 105, 82, 83,
		105, 105, 105, 87, 88, 89, 105, 91, 64, 54,
		55, 56, 57, 69, 70, 105, 72, 73, 74, 105,
		105, 105, 105, 79, 105, 105, 82, 83, 105, 105,
		105, 87, 88, 89, 64, 91, 1, 2, 3, 69,
		70, 105, 72, 73, 74, 105, 105, 105, 105, 79,
		105, 105, 82, 83, 105, 105, 105, 87, 88, 89,
		64, 91, 105, 105, 105, 69, 70, 105, 72, 73,
		74, 105, 105, 38, 39, 79, 105, 105, 82, 83,
		105, 105, 105, 87, 88, 89, 105, 91, 64, 54,
		55, 56, 57, 69, 70, 105, 72, 73, 74, 105,
		105, 105, 105, 79, 105, 105, 82, 83, 105, 105,
		105, 87, 88, 89, 64, 91, 1, 105, 3, 69,
		70, 105, 72, 73, 74, 105, 105, 105, 105, 79,
		105, 105, 82, 83, 105, 105, 105, 87, 88, 89,
		64, 91, 105, 105, 105, 69, 70, 105, 72, 73,
		74, 105, 37, 38, 39, 79, 105, 105, 82, 83,
		105, 105, 105, 87, 88, 89, 105, 91, 64, 54,
		55, 56, 57, 69, 70, 105, 72, 73, 74, 105,
		105, 105, 105, 79, 105, 105, 82, 83, 105, 105,
		105, 87, 88, 89, 64, 91, 1, 105, 3, 69,
		70, 105, 72, 73, 74, 105, 11, 105, 105, 79,
		105, 105, 82, 83, 105, 105, 105, 87, 88, 89,
		64, 91, 105, 105, 105, 69, 70, 105, 72, 73,
		74, 105, 105, 38, 39, 79, 105, 105, 82, 83,
		105, 105, 105, 87, 88, 89, 105, 91, 64, 54,
		55, 56, 57, 69, 70, 105, 72, 73, 74, 105,
		105, 105, 105, 79, 105, 105, 82, 83, 105, 105,
		105, 87, 88, 89, 64, 91, 1, 105, 3, 69,
		70, 105, 72, 73, 74, 105, 105, 105, 105, 79,
		105, 105, 82, 83, 105, 105, 105, 87, 88, 89,
		64, 91, 105, 28, 105, 69, 70, 105, 72, 73,
		74, 105, 105, 38, 39, 79, 105, 105, 82, 83,
		105, 105, 105, 87, 88, 89, 105, 91, 64, 54,
		55, 56, 57, 69, 70, 105, 72, 73, 74, 105,
		105, 105, 105, 79, 105, 105, 82, 83, 105, 105,
		105, 87, 88, 89, 64, 91, 1, 105, 3, 69,
		70, 105, 72, 73, 74, 105, 11, 105, 105, 79,
		105, 105, 82, 83, 105, 105, 105, 87, 88, 89,
		64, 91, 105, 105, 105, 69, 70, 105, 72, 73,
		74, 105, 105, 38, 39, 79, 105, 105, 82, 83,
		105, 105, 105, 87, 88, 89, 105, 91, 64, 54,
		55, 56, 57, 69, 70, 105, 72, 73, 74, 105,
		3, 105, 105, 79, 105, 105, 82, 83, 1, 105,
		3, 87, 88, 89, 64, 91, 105, 105, 11, 69,
		70, 105, 72, 73, 74, 105, 105, 105, 105, 79,
		105, 105, 82, 83, 27, 38, 39, 87, 88, 89,
		33, 91, 1, 105, 3, 38, 39, 105, 105, 105,
		105, 54, 55, 56, 57, 105, 105, 105, 105, 105,
		105, 54, 55, 56, 57, 105, 25, 105, 27, 105,
		105, 105, 71, 105, 33, 105, 75, 105, 14, 38,
		39, 17, 81, 105, 64, 84, 85, 86, 105, 69,
		70, 105, 72, 105, 74, 54, 55, 56, 57, 79,
		99, 105, 105, 83, 105, 105, 105, 87, 88, 89,
		64, 91, 48, 105, 50, 69, 70, 53, 72, 105,
		74, 105, 105, 105, 105, 79, 105, 105, 105, 83,
		105, 105, 105, 87, 88, 89, 105, 91, 105, 64,
		105, 1, 105, 3, 69, 70, 105, 72, 105, 74,
		105, 105, 105, 105, 79, 105, 105, 105, 105, 105,
		105, 105, 87, 88, 89, 105, 91, 27, 105, 105,
		105, 105, 105, 33, 105, 64, 105, 105, 38, 39,
		69, 70, 105, 72, 105, 74, 105, 105, 105, 105,
		79, 105, 105, 105, 54, 55, 56, 57, 87, 88,
		89, 105, 91, 105, 105, 105, 64, 105, 105, 105,
		105, 69, 70, 105, 72, 105, 74, 105, 105, 105,
		105, 79, 105, 105, 105, 105, 105, 105, 105, 87,
		88, 89, 64, 91, 2, 105, 105, 69, 70, 105,
		72, 105, 74, 105, 12, 13, 105, 79, 105, 17,
		18, 105, 2, 105, 105, 87, 88, 89, 105, 91,
		105, 105, 12, 13, 105, 15, 105, 17, 18, 105,
		1, 105, 3, 105, 105, 105, 44, 105, 105, 47,
		105, 49, 105, 51, 52, 105, 105, 105, 105, 105,
		105, 22, 105, 105, 44, 105, 105, 47, 105, 49,
		2, 51, 105, 105, 105, 105, 105, 38, 39, 105,
		12, 13, 64, 15, 105, 17, 18, 69, 70, 105,
		72, 105, 74, 54, 55, 56, 57, 79, 105, 105,
		105, 105, 105, 105, 105, 87, 88, 89, 105, 91,
		105, 105, 44, 105, 105, 47, 64, 49, 2, 51,
		105, 69, 70, 105, 72, 105, 74, 105, 12, 13,
		105, 79, 105, 17, 18, 105, 2, 105, 105, 87,
		88, 89, 1, 91, 3, 105, 12, 13, 105, 105,
		105, 17, 18, 105, 61, 62, 63, 64, 65, 66,
		44, 105, 69, 47, 105, 49, 105, 51, 105, 105,
		105, 105, 105, 105, 105, 105, 105, 11, 44, 38,
		39, 47, 105, 49, 105, 51, 105, 105, 22, 105,
		24, 105, 105, 27, 105, 54, 55, 56, 57, 33,
		105, 35, 105, 37, 105, 105, 105, 105, 71, 105,
		44, 105, 75, 105, 105, 105, 105, 105, 81, 105,
		105, 84, 85, 86, 105, 105, 105, 105, 105, 105,
		105, 105, 105, 105, 105, 105, 99,
	);
	static public $yy_shift_ofst = array(
		548, 293, 48, 293, 342, 48, 48, 342, -3, 440,
		48, 48, 48, 48, 48, 48, 48, 48, 48, 244,
		48, 48, 48, 48, 48, 244, 48, 48, 195, 48,
		146, 97, 48, 48, 48, 48, 195, 391, 391, 489,
		489, 489, 489, 489, 489, 1631, 1597, 1730, 1730, 1730,
		1730, 1730, 548, 1859, 1525, 1445, 1365, 885, 1285, 1205,
		1125, 1001, 660, 1081, 1961, 1961, 1961, 1961, 1961, 1961,
		1961, 1961, 1961, 1961, 1961, 1961, 1587, 1587, 1654, 612,
		823, 120, 190, 20, 217, 763, 633, 532, 217, 20,
		20, 217, 151, 493, 70, 9, 141, 140, 75, 193,
		234, 389, 303, 303, 204, 233, 395, 461, 362, 461,
		435, 365, 19, 19, 386, 219, 86, 299, 299, 299,
		299, 299, 86, 299, 299, -30, -30, -30, 1888, 1840,
		1822, 1954, 1936, 499, -9, 242, 289, -11, 19, 19,
		19, 19, 19, 19, -29, 19, 19, 19, -29, 265,
		19, 265, -29, 100, 19, -29, 100, -29, -29, 19,
		288, -29, 94, -29, 19, 19, 19, 19, 19, 299,
		299, 28, 299, 86, 515, 86, 28, 86, 147, 299,
		299, -30, -30, -30, -30, -30, 580, 1986, 776, 46,
		188, 12, -10, 60, 315, 334, 295, 317, 305, 332,
		178, 247, 89, 117, 36, 41, 524, 491, 506, 519,
		468, 510, 509, 508, 497, 466, 456, 462, 358, 446,
		476, 507, 512, 514, 505, 515, 546, 555, 534, 535,
		571, 517,
	);
	static public $yy_reduce_ofst = array(
		1913, 520, 585, 618, 655, 683, 728, 766, 926, 794,
		820, 1034, 1274, 1486, 1434, 1380, 1326, 1300, 1220, 1166,
		1114, 1540, 874, 980, 1140, 1194, 1246, 1086, 1354, 1406,
		1460, 1514, 1060, 1006, 846, 900, 954, 1610, 1636, 1701,
		1758, 1838, 1872, 1665, 1732, 594, 935, 1015, 1591, 664,
		1957, 935, 56, 487, 487, 487, 487, 487, 487, 487,
		487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
		487, 487, 487, 487, 487, 487, 487, 487, -67, 164,
		104, -4, 218, 107, 202, 262, 271, 227, 65, 352,
		340, 251, 176, 302, 398, 398, 307, 410, 307, 297,
		355, 399, 297, 405, 355, 307, 388, 383, 355, 339,
		384, 341, 377, 359, 307, 307, 350, 307, 307, 307,
		307, 429, 355, 307, 307, 307, 307, 307, 503, 503,
		503, 503, 503, 503, 522, 502, 503, 503, 504, 504,
		504, 504, 504, 504, 484, 504, 504, 504, 484, 521,
		504, 518, 484, 496, 504, 484, 513, 484, 484, 504,
		526, 484, 523, 484, 504, 504, 504, 504, 504, 72,
		72, -28, 72, 170, 495, 170, -28, 170, 261, 72,
		72, 367, 344, 256, 291, 43,
	);
	static public $yyExpectedTokens = array(
		array(4, 5, 6, 7, 8, 12, 13, 16, 19, 20, 21, 26, 30, 31, 32,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 52, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 53, 58,),
		array(3, 12, 13, 14, 16, 17, 19, 20, 21, 26, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 48, 50, 53, 58,),
		array(1, 3, 25, 27, 33, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 11, 27, 33, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 27, 33, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 27, 33, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 27, 33, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 27, 33, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 27, 33, 38, 39, 54, 55, 56, 57,),
		array(4, 5, 6, 7, 8, 12, 13, 16, 19, 20, 21, 26, 30, 31, 32,),
		array(1, 3, 22, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 11, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 28, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 11, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 11, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 37, 38, 39, 54, 55, 56, 57,),
		array(1, 2, 3, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 37, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 38, 39, 54, 55, 56, 57, 59,),
		array(1, 3, 38, 39, 52, 54, 55, 56, 57,),
		array(1, 3, 11, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 38, 39, 54, 55, 56, 57,),
		array(1, 3, 38, 39, 54, 55, 56, 57,),
		array(3, 38, 39, 54, 55, 56, 57,),
		array(3, 38, 39, 54, 55, 56, 57,),
		array(14, 17, 48, 50, 53,),
		array(5, 12, 13, 14, 16, 19, 20, 21, 26, 30, 31, 32, 58, 59,),
		array(1, 11, 18, 27, 33, 36, 47,),
		array(14, 17, 50, 53,),
		array(1, 11, 27, 33,),
		array(14, 36, 53,),
		array(1, 27, 33,),
		array(5, 12, 13, 14, 16, 19, 20, 21, 26, 30, 31, 32, 58, 59,),
		array(12, 13, 17, 27, 29, 33,),
		array(12, 13, 17, 27, 33,),
		array(1, 27, 33,),
		array(14, 36, 53,),
		array(14, 36, 53,),
		array(1, 27, 33,),
		array(18, 44, 51,),
		array(1, 2,),
		array(11, 23, 27, 33, 45,),
		array(11, 23, 27, 33, 45,),
		array(1, 11, 27, 33,),
		array(13, 14, 17, 53,),
		array(1, 11, 27, 33,),
		array(12, 13, 17, 49,),
		array(15, 18, 47,),
		array(8, 9, 10,),
		array(12, 13, 17,),
		array(12, 13, 17,),
		array(15, 18, 47,),
		array(1, 29,),
		array(1, 18,),
		array(14, 17,),
		array(18, 47,),
		array(14, 17,),
		array(27, 33,),
		array(14, 53,),
		array(27, 33,),
		array(27, 33,),
		array(1, 52,),
		array(1, 11,),
		array(18,),
		array(1,),
		array(1,),
		array(1,),
		array(1,),
		array(1,),
		array(18,),
		array(1,),
		array(1,),
		array(),
		array(),
		array(),
		array(2, 12, 13, 15, 17, 18, 44, 47, 49, 51,),
		array(2, 12, 13, 15, 17, 18, 44, 47, 49, 51,),
		array(2, 12, 13, 17, 18, 44, 47, 49, 51, 52,),
		array(2, 12, 13, 17, 18, 44, 47, 49, 51,),
		array(2, 12, 13, 17, 18, 44, 47, 49, 51,),
		array(12, 13, 17, 18, 44, 47, 49, 51,),
		array(13, 14, 17, 34, 53,),
		array(12, 13, 17, 49,),
		array(15, 44, 51,),
		array(12, 13, 17,),
		array(27, 33,),
		array(27, 33,),
		array(27, 33,),
		array(27, 33,),
		array(27, 33,),
		array(27, 33,),
		array(44, 51,),
		array(27, 33,),
		array(27, 33,),
		array(27, 33,),
		array(44, 51,),
		array(14, 53,),
		array(27, 33,),
		array(14, 53,),
		array(44, 51,),
		array(44, 51,),
		array(27, 33,),
		array(44, 51,),
		array(44, 51,),
		array(44, 51,),
		array(44, 51,),
		array(27, 33,),
		array(15, 23,),
		array(44, 51,),
		array(13, 36,),
		array(44, 51,),
		array(27, 33,),
		array(27, 33,),
		array(27, 33,),
		array(27, 33,),
		array(27, 33,),
		array(1,),
		array(1,),
		array(2,),
		array(1,),
		array(18,),
		array(36,),
		array(18,),
		array(2,),
		array(18,),
		array(9,),
		array(1,),
		array(1,),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(1, 2, 3, 36, 38, 39, 47, 54, 55, 56, 57,),
		array(11, 22, 24, 27, 33, 35, 37, 44,),
		array(11, 15, 27, 33, 36, 47,),
		array(12, 13, 17, 49,),
		array(36, 44, 47, 52,),
		array(23, 45, 59,),
		array(29, 36, 47,),
		array(23, 45, 52,),
		array(23, 45,),
		array(36, 47,),
		array(35, 52,),
		array(36, 47,),
		array(44, 52,),
		array(35, 37,),
		array(22, 35,),
		array(35, 37,),
		array(35, 37,),
		array(15, 44,),
		array(17, 49,),
		array(36, 47,),
		array(34,),
		array(50,),
		array(34,),
		array(17,),
		array(17,),
		array(17,),
		array(17,),
		array(14,),
		array(17,),
		array(52,),
		array(44,),
		array(15,),
		array(17,),
		array(50,),
		array(37,),
		array(17,),
		array(17,),
		array(24,),
		array(52,),
		array(36,),
		array(17,),
		array(11,),
		array(36,),
		array(40,),
		array(5,),
		array(17,),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
		array(),
	);
	static public $yy_default = array(
		330, 504, 483, 519, 519, 483, 483, 519, 519, 519,
		519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
		519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
		519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
		519, 519, 519, 519, 519, 385, 519, 364, 385, 354,
		385, 351, 327, 519, 519, 390, 519, 519, 519, 519,
		519, 519, 519, 519, 387, 369, 506, 507, 396, 505,
		482, 407, 390, 481, 397, 392, 412, 411, 519, 519,
		423, 519, 399, 519, 385, 519, 385, 385, 385, 519,
		519, 385, 495, 376, 413, 413, 399, 519, 399, 448,
		438, 519, 448, 448, 438, 399, 379, 519, 438, 519,
		385, 519, 366, 385, 399, 399, 492, 416, 415, 402,
		399, 381, 438, 406, 410, 403, 490, 414, 437, 437,
		437, 437, 437, 437, 519, 450, 464, 448, 367, 356,
		355, 350, 371, 352, 446, 358, 372, 374, 445, 519,
		373, 519, 444, 443, 360, 442, 441, 475, 476, 368,
		519, 473, 448, 474, 375, 365, 362, 348, 361, 377,
		382, 484, 380, 493, 448, 470, 485, 496, 342, 432,
		405, 489, 489, 448, 489, 448, 423, 419, 423, 449,
		423, 413, 423, 413, 413, 519, 519, 423, 419, 519,
		519, 519, 519, 419, 519, 433, 421, 519, 519, 519,
		519, 519, 519, 519, 519, 428, 419, 519, 519, 519,
		519, 519, 519, 393, 519, 464, 519, 519, 494, 425,
		334, 519, 487, 478, 464, 486, 469, 479, 491, 425,
		454, 480, 386, 344, 331, 332, 333, 336, 335, 337,
		338, 339, 340, 341, 343, 345, 378, 398, 346, 383,
		357, 363, 394, 384, 466, 467, 370, 488, 468, 426,
		463, 471, 429, 430, 510, 509, 508, 408, 409, 431,
		434, 461, 459, 462, 512, 497, 498, 499, 500, 404,
		329, 516, 439, 440, 472, 515, 465, 513, 514, 457,
		452, 456, 455, 458, 460, 417, 427, 435, 436, 447,
		477, 451, 453, 517, 400, 401, 418, 420, 502, 503,
		422, 501, 424, 428, 511, 518, 328,
	);
	public static $yyFallback = array();
	public static $yyRuleName = array(
		'start ::= template',
		'template ::= template_element',
		'template ::= template template_element',
		'template ::=',
		'template_element ::= smartytag',
		'template_element ::= literal',
		'template_element ::= PHP',
		'template_element ::= text_content',
		'text_content ::= TEXT',
		'text_content ::= text_content TEXT',
		'template_element ::= STRIPON',
		'template_element ::= STRIPOFF',
		'literal ::= LITERALSTART LITERALEND',
		'literal ::= LITERALSTART literal_elements LITERALEND',
		'literal_elements ::= literal_elements literal_element',
		'literal_elements ::=',
		'literal_element ::= literal',
		'literal_element ::= LITERAL',
		'smartytag ::= tag RDEL',
		'smartytag ::= SIMPELOUTPUT',
		'tag ::= LDEL variable',
		'tag ::= LDEL variable attributes',
		'tag ::= LDEL value',
		'tag ::= LDEL value attributes',
		'tag ::= LDEL expr',
		'tag ::= LDEL expr attributes',
		'tag ::= LDEL DOLLARID EQUAL value',
		'tag ::= LDEL DOLLARID EQUAL expr',
		'tag ::= LDEL DOLLARID EQUAL expr attributes',
		'tag ::= LDEL varindexed EQUAL expr attributes',
		'smartytag ::= SIMPLETAG',
		'tag ::= LDEL ID attributes',
		'tag ::= LDEL ID',
		'tag ::= LDEL ID modifierlist attributes',
		'tag ::= LDEL ID PTR ID attributes',
		'tag ::= LDEL ID PTR ID modifierlist attributes',
		'tag ::= LDELMAKENOCACHE DOLLARID',
		'tag ::= LDELIF expr',
		'tag ::= LDELIF expr attributes',
		'tag ::= LDELIF statement',
		'tag ::= LDELIF statement attributes',
		'tag ::= LDELFOR statements SEMICOLON expr SEMICOLON varindexed foraction attributes',
		'foraction ::= EQUAL expr',
		'foraction ::= INCDEC',
		'tag ::= LDELFOR statement TO expr attributes',
		'tag ::= LDELFOR statement TO expr STEP expr attributes',
		'tag ::= LDELFOREACH SPACE expr AS varvar attributes',
		'tag ::= LDELFOREACH SPACE expr AS varvar APTR varvar attributes',
		'tag ::= LDELFOREACH attributes',
		'tag ::= LDELSETFILTER ID modparameters',
		'tag ::= LDELSETFILTER ID modparameters modifierlist',
		'smartytag ::= CLOSETAG',
		'tag ::= LDELSLASH ID',
		'tag ::= LDELSLASH ID modifierlist',
		'tag ::= LDELSLASH ID PTR ID',
		'tag ::= LDELSLASH ID PTR ID modifierlist',
		'attributes ::= attributes attribute',
		'attributes ::= attribute',
		'attributes ::=',
		'attribute ::= SPACE ID EQUAL ID',
		'attribute ::= ATTR expr',
		'attribute ::= ATTR value',
		'attribute ::= SPACE ID',
		'attribute ::= SPACE expr',
		'attribute ::= SPACE value',
		'attribute ::= SPACE INTEGER EQUAL expr',
		'statements ::= statement',
		'statements ::= statements COMMA statement',
		'statement ::= DOLLARID EQUAL INTEGER',
		'statement ::= DOLLARID EQUAL expr',
		'statement ::= varindexed EQUAL expr',
		'statement ::= OPENP statement CLOSEP',
		'expr ::= value',
		'expr ::= ternary',
		'expr ::= DOLLARID COLON ID',
		'expr ::= expr MATH value',
		'expr ::= expr UNIMATH value',
		'expr ::= array',
		'expr ::= expr modifierlist',
		'expr ::= expr tlop value',
		'expr ::= expr lop expr',
		'expr ::= expr scond',
		'expr ::= expr ISIN array',
		'expr ::= expr ISIN value',
		'ternary ::= OPENP expr CLOSEP QMARK DOLLARID COLON expr',
		'ternary ::= OPENP expr CLOSEP QMARK expr COLON expr',
		'value ::= variable',
		'value ::= UNIMATH value',
		'value ::= NOT value',
		'value ::= TYPECAST value',
		'value ::= variable INCDEC',
		'value ::= HEX',
		'value ::= INTEGER',
		'value ::= INTEGER DOT INTEGER',
		'value ::= INTEGER DOT',
		'value ::= DOT INTEGER',
		'value ::= ID',
		'value ::= function',
		'value ::= OPENP expr CLOSEP',
		'value ::= variable INSTANCEOF ns1',
		'value ::= variable INSTANCEOF variable',
		'value ::= SINGLEQUOTESTRING',
		'value ::= doublequoted_with_quotes',
		'value ::= varindexed DOUBLECOLON static_class_access',
		'value ::= smartytag',
		'value ::= value modifierlist',
		'value ::= NAMESPACE',
		'value ::= ns1 DOUBLECOLON static_class_access',
		'ns1 ::= ID',
		'ns1 ::= NAMESPACE',
		'variable ::= DOLLARID',
		'variable ::= varindexed',
		'variable ::= varvar AT ID',
		'variable ::= object',
		'variable ::= HATCH ID HATCH',
		'variable ::= HATCH ID HATCH arrayindex',
		'variable ::= HATCH variable HATCH',
		'variable ::= HATCH variable HATCH arrayindex',
		'varindexed ::= DOLLARID arrayindex',
		'varindexed ::= varvar arrayindex',
		'arrayindex ::= arrayindex indexdef',
		'arrayindex ::=',
		'indexdef ::= DOT DOLLARID',
		'indexdef ::= DOT varvar',
		'indexdef ::= DOT varvar AT ID',
		'indexdef ::= DOT ID',
		'indexdef ::= DOT INTEGER',
		'indexdef ::= DOT LDEL expr RDEL',
		'indexdef ::= OPENB ID CLOSEB',
		'indexdef ::= OPENB ID DOT ID CLOSEB',
		'indexdef ::= OPENB SINGLEQUOTESTRING CLOSEB',
		'indexdef ::= OPENB INTEGER CLOSEB',
		'indexdef ::= OPENB DOLLARID CLOSEB',
		'indexdef ::= OPENB variable CLOSEB',
		'indexdef ::= OPENB value CLOSEB',
		'indexdef ::= OPENB expr CLOSEB',
		'indexdef ::= OPENB CLOSEB',
		'varvar ::= DOLLARID',
		'varvar ::= DOLLAR',
		'varvar ::= varvar varvarele',
		'varvarele ::= ID',
		'varvarele ::= SIMPELOUTPUT',
		'varvarele ::= LDEL expr RDEL',
		'object ::= varindexed objectchain',
		'objectchain ::= objectelement',
		'objectchain ::= objectchain objectelement',
		'objectelement ::= PTR ID arrayindex',
		'objectelement ::= PTR varvar arrayindex',
		'objectelement ::= PTR LDEL expr RDEL arrayindex',
		'objectelement ::= PTR ID LDEL expr RDEL arrayindex',
		'objectelement ::= PTR method',
		'function ::= ns1 OPENP params CLOSEP',
		'method ::= ID OPENP params CLOSEP',
		'method ::= DOLLARID OPENP params CLOSEP',
		'params ::= params COMMA expr',
		'params ::= expr',
		'params ::=',
		'modifierlist ::= modifierlist modifier modparameters',
		'modifierlist ::= modifier modparameters',
		'modifier ::= VERT AT ID',
		'modifier ::= VERT ID',
		'modparameters ::= modparameters modparameter',
		'modparameters ::=',
		'modparameter ::= COLON value',
		'modparameter ::= COLON array',
		'static_class_access ::= method',
		'static_class_access ::= method objectchain',
		'static_class_access ::= ID',
		'static_class_access ::= DOLLARID arrayindex',
		'static_class_access ::= DOLLARID arrayindex objectchain',
		'lop ::= LOGOP',
		'lop ::= SLOGOP',
		'tlop ::= TLOGOP',
		'scond ::= SINGLECOND',
		'array ::= OPENB arrayelements CLOSEB',
		'arrayelements ::= arrayelement',
		'arrayelements ::= arrayelements COMMA arrayelement',
		'arrayelements ::=',
		'arrayelement ::= value APTR expr',
		'arrayelement ::= ID APTR expr',
		'arrayelement ::= expr',
		'doublequoted_with_quotes ::= QUOTE QUOTE',
		'doublequoted_with_quotes ::= QUOTE doublequoted QUOTE',
		'doublequoted ::= doublequoted doublequotedcontent',
		'doublequoted ::= doublequotedcontent',
		'doublequotedcontent ::= BACKTICK variable BACKTICK',
		'doublequotedcontent ::= BACKTICK expr BACKTICK',
		'doublequotedcontent ::= DOLLARID',
		'doublequotedcontent ::= LDEL variable RDEL',
		'doublequotedcontent ::= LDEL expr RDEL',
		'doublequotedcontent ::= smartytag',
		'doublequotedcontent ::= TEXT',
	);
	public static $yyRuleInfo = array(
		array(0 => 61, 1 => 1),
		array(0 => 62, 1 => 1),
		array(0 => 62, 1 => 2),
		array(0 => 62, 1 => 0),
		array(0 => 63, 1 => 1),
		array(0 => 63, 1 => 1),
		array(0 => 63, 1 => 1),
		array(0 => 63, 1 => 1),
		array(0 => 66, 1 => 1),
		array(0 => 66, 1 => 2),
		array(0 => 63, 1 => 1),
		array(0 => 63, 1 => 1),
		array(0 => 65, 1 => 2),
		array(0 => 65, 1 => 3),
		array(0 => 67, 1 => 2),
		array(0 => 67, 1 => 0),
		array(0 => 68, 1 => 1),
		array(0 => 68, 1 => 1),
		array(0 => 64, 1 => 2),
		array(0 => 64, 1 => 1),
		array(0 => 69, 1 => 2),
		array(0 => 69, 1 => 3),
		array(0 => 69, 1 => 2),
		array(0 => 69, 1 => 3),
		array(0 => 69, 1 => 2),
		array(0 => 69, 1 => 3),
		array(0 => 69, 1 => 4),
		array(0 => 69, 1 => 4),
		array(0 => 69, 1 => 5),
		array(0 => 69, 1 => 5),
		array(0 => 64, 1 => 1),
		array(0 => 69, 1 => 3),
		array(0 => 69, 1 => 2),
		array(0 => 69, 1 => 4),
		array(0 => 69, 1 => 5),
		array(0 => 69, 1 => 6),
		array(0 => 69, 1 => 2),
		array(0 => 69, 1 => 2),
		array(0 => 69, 1 => 3),
		array(0 => 69, 1 => 2),
		array(0 => 69, 1 => 3),
		array(0 => 69, 1 => 8),
		array(0 => 78, 1 => 2),
		array(0 => 78, 1 => 1),
		array(0 => 69, 1 => 5),
		array(0 => 69, 1 => 7),
		array(0 => 69, 1 => 6),
		array(0 => 69, 1 => 8),
		array(0 => 69, 1 => 2),
		array(0 => 69, 1 => 3),
		array(0 => 69, 1 => 4),
		array(0 => 64, 1 => 1),
		array(0 => 69, 1 => 2),
		array(0 => 69, 1 => 3),
		array(0 => 69, 1 => 4),
		array(0 => 69, 1 => 5),
		array(0 => 71, 1 => 2),
		array(0 => 71, 1 => 1),
		array(0 => 71, 1 => 0),
		array(0 => 81, 1 => 4),
		array(0 => 81, 1 => 2),
		array(0 => 81, 1 => 2),
		array(0 => 81, 1 => 2),
		array(0 => 81, 1 => 2),
		array(0 => 81, 1 => 2),
		array(0 => 81, 1 => 4),
		array(0 => 77, 1 => 1),
		array(0 => 77, 1 => 3),
		array(0 => 76, 1 => 3),
		array(0 => 76, 1 => 3),
		array(0 => 76, 1 => 3),
		array(0 => 76, 1 => 3),
		array(0 => 73, 1 => 1),
		array(0 => 73, 1 => 1),
		array(0 => 73, 1 => 3),
		array(0 => 73, 1 => 3),
		array(0 => 73, 1 => 3),
		array(0 => 73, 1 => 1),
		array(0 => 73, 1 => 2),
		array(0 => 73, 1 => 3),
		array(0 => 73, 1 => 3),
		array(0 => 73, 1 => 2),
		array(0 => 73, 1 => 3),
		array(0 => 73, 1 => 3),
		array(0 => 82, 1 => 7),
		array(0 => 82, 1 => 7),
		array(0 => 72, 1 => 1),
		array(0 => 72, 1 => 2),
		array(0 => 72, 1 => 2),
		array(0 => 72, 1 => 2),
		array(0 => 72, 1 => 2),
		array(0 => 72, 1 => 1),
		array(0 => 72, 1 => 1),
		array(0 => 72, 1 => 3),
		array(0 => 72, 1 => 2),
		array(0 => 72, 1 => 2),
		array(0 => 72, 1 => 1),
		array(0 => 72, 1 => 1),
		array(0 => 72, 1 => 3),
		array(0 => 72, 1 => 3),
		array(0 => 72, 1 => 3),
		array(0 => 72, 1 => 1),
		array(0 => 72, 1 => 1),
		array(0 => 72, 1 => 3),
		array(0 => 72, 1 => 1),
		array(0 => 72, 1 => 2),
		array(0 => 72, 1 => 1),
		array(0 => 72, 1 => 3),
		array(0 => 88, 1 => 1),
		array(0 => 88, 1 => 1),
		array(0 => 70, 1 => 1),
		array(0 => 70, 1 => 1),
		array(0 => 70, 1 => 3),
		array(0 => 70, 1 => 1),
		array(0 => 70, 1 => 3),
		array(0 => 70, 1 => 4),
		array(0 => 70, 1 => 3),
		array(0 => 70, 1 => 4),
		array(0 => 74, 1 => 2),
		array(0 => 74, 1 => 2),
		array(0 => 92, 1 => 2),
		array(0 => 92, 1 => 0),
		array(0 => 93, 1 => 2),
		array(0 => 93, 1 => 2),
		array(0 => 93, 1 => 4),
		array(0 => 93, 1 => 2),
		array(0 => 93, 1 => 2),
		array(0 => 93, 1 => 4),
		array(0 => 93, 1 => 3),
		array(0 => 93, 1 => 5),
		array(0 => 93, 1 => 3),
		array(0 => 93, 1 => 3),
		array(0 => 93, 1 => 3),
		array(0 => 93, 1 => 3),
		array(0 => 93, 1 => 3),
		array(0 => 93, 1 => 3),
		array(0 => 93, 1 => 2),
		array(0 => 79, 1 => 1),
		array(0 => 79, 1 => 1),
		array(0 => 79, 1 => 2),
		array(0 => 94, 1 => 1),
		array(0 => 94, 1 => 1),
		array(0 => 94, 1 => 3),
		array(0 => 91, 1 => 2),
		array(0 => 95, 1 => 1),
		array(0 => 95, 1 => 2),
		array(0 => 96, 1 => 3),
		array(0 => 96, 1 => 3),
		array(0 => 96, 1 => 5),
		array(0 => 96, 1 => 6),
		array(0 => 96, 1 => 2),
		array(0 => 87, 1 => 4),
		array(0 => 97, 1 => 4),
		array(0 => 97, 1 => 4),
		array(0 => 98, 1 => 3),
		array(0 => 98, 1 => 1),
		array(0 => 98, 1 => 0),
		array(0 => 75, 1 => 3),
		array(0 => 75, 1 => 2),
		array(0 => 99, 1 => 3),
		array(0 => 99, 1 => 2),
		array(0 => 80, 1 => 2),
		array(0 => 80, 1 => 0),
		array(0 => 100, 1 => 2),
		array(0 => 100, 1 => 2),
		array(0 => 90, 1 => 1),
		array(0 => 90, 1 => 2),
		array(0 => 90, 1 => 1),
		array(0 => 90, 1 => 2),
		array(0 => 90, 1 => 3),
		array(0 => 85, 1 => 1),
		array(0 => 85, 1 => 1),
		array(0 => 84, 1 => 1),
		array(0 => 86, 1 => 1),
		array(0 => 83, 1 => 3),
		array(0 => 101, 1 => 1),
		array(0 => 101, 1 => 3),
		array(0 => 101, 1 => 0),
		array(0 => 102, 1 => 3),
		array(0 => 102, 1 => 3),
		array(0 => 102, 1 => 1),
		array(0 => 89, 1 => 2),
		array(0 => 89, 1 => 3),
		array(0 => 103, 1 => 2),
		array(0 => 103, 1 => 1),
		array(0 => 104, 1 => 3),
		array(0 => 104, 1 => 3),
		array(0 => 104, 1 => 1),
		array(0 => 104, 1 => 3),
		array(0 => 104, 1 => 3),
		array(0 => 104, 1 => 1),
		array(0 => 104, 1 => 1),
	);
	public static $yyReduceMap = array(
		0 => 0,
		1 => 1,
		2 => 2,
		4 => 4,
		5 => 5,
		6 => 6,
		7 => 7,
		8 => 8,
		16 => 8,
		17 => 8,
		43 => 8,
		63 => 8,
		64 => 8,
		72 => 8,
		73 => 8,
		77 => 8,
		86 => 8,
		91 => 8,
		92 => 8,
		97 => 8,
		101 => 8,
		102 => 8,
		106 => 8,
		108 => 8,
		113 => 8,
		175 => 8,
		180 => 8,
		9 => 9,
		10 => 10,
		11 => 11,
		12 => 12,
		15 => 12,
		13 => 13,
		71 => 13,
		14 => 14,
		87 => 14,
		89 => 14,
		90 => 14,
		120 => 14,
		18 => 18,
		19 => 19,
		20 => 20,
		22 => 20,
		24 => 20,
		21 => 21,
		23 => 21,
		25 => 21,
		26 => 26,
		27 => 26,
		28 => 28,
		29 => 29,
		30 => 30,
		31 => 31,
		32 => 32,
		33 => 33,
		34 => 34,
		35 => 35,
		36 => 36,
		37 => 37,
		38 => 38,
		40 => 38,
		39 => 39,
		41 => 41,
		42 => 42,
		44 => 44,
		45 => 45,
		46 => 46,
		47 => 47,
		48 => 48,
		49 => 49,
		50 => 50,
		51 => 51,
		52 => 52,
		53 => 53,
		54 => 54,
		55 => 55,
		56 => 56,
		57 => 57,
		66 => 57,
		155 => 57,
		159 => 57,
		163 => 57,
		164 => 57,
		58 => 58,
		156 => 58,
		162 => 58,
		59 => 59,
		60 => 60,
		61 => 60,
		62 => 62,
		140 => 62,
		65 => 65,
		67 => 67,
		68 => 68,
		69 => 68,
		70 => 70,
		74 => 74,
		75 => 75,
		76 => 75,
		78 => 78,
		105 => 78,
		79 => 79,
		80 => 80,
		81 => 81,
		82 => 82,
		83 => 83,
		84 => 84,
		85 => 85,
		88 => 88,
		93 => 93,
		94 => 94,
		95 => 95,
		96 => 96,
		98 => 98,
		99 => 99,
		100 => 99,
		103 => 103,
		104 => 104,
		107 => 107,
		109 => 109,
		110 => 110,
		111 => 111,
		112 => 112,
		114 => 114,
		115 => 115,
		116 => 116,
		117 => 117,
		118 => 118,
		119 => 119,
		121 => 121,
		177 => 121,
		122 => 122,
		123 => 123,
		124 => 124,
		125 => 125,
		126 => 126,
		127 => 127,
		135 => 127,
		128 => 128,
		129 => 129,
		130 => 130,
		131 => 130,
		133 => 130,
		134 => 130,
		132 => 132,
		136 => 136,
		137 => 137,
		138 => 138,
		181 => 138,
		139 => 139,
		141 => 141,
		142 => 142,
		143 => 143,
		144 => 144,
		145 => 145,
		146 => 146,
		147 => 147,
		148 => 148,
		149 => 149,
		150 => 150,
		151 => 151,
		152 => 152,
		153 => 153,
		154 => 154,
		157 => 157,
		158 => 158,
		160 => 160,
		161 => 161,
		165 => 165,
		166 => 166,
		167 => 167,
		168 => 168,
		169 => 169,
		170 => 170,
		171 => 171,
		172 => 172,
		173 => 173,
		174 => 174,
		176 => 176,
		178 => 178,
		179 => 179,
		182 => 182,
		183 => 183,
		184 => 184,
		185 => 185,
		186 => 185,
		187 => 187,
		188 => 188,
		189 => 189,
		190 => 190,
		191 => 191,
	);
	/**
	 * result status
	 *
	 * @var bool
	 */
	public $successful = true;
	/**
	 * return value
	 *
	 * @var mixed
	 */
	public $retvalue = 0;
	/**
	 * @var
	 */
	public $yymajor;
	/**
	 * last index of array variable
	 *
	 * @var mixed
	 */
	public $last_index;
	/**
	 * last variable name
	 *
	 * @var string
	 */
	public $last_variable;
	/**
	 * root parse tree buffer
	 *
	 * @var Smarty_Internal_ParseTree
	 */
	public $root_buffer;
	/**
	 * current parse tree object
	 *
	 * @var Smarty_Internal_ParseTree
	 */
	public $current_buffer;
	/**
	 * lexer object
	 *
	 * @var Smarty_Internal_Templatelexer
	 */
	public $lex;
	/**
	 * {strip} status
	 *
	 * @var bool
	 */
	public $strip = false;
	/**
	 * compiler object
	 *
	 * @var Smarty_Internal_TemplateCompilerBase
	 */
	public $compiler = null;
	/**
	 * smarty object
	 *
	 * @var Smarty
	 */
	public $smarty = null;
	/**
	 * template object
	 *
	 * @var Smarty_Internal_Template
	 */
	public $template = null;
	/**
	 * block nesting level
	 *
	 * @var int
	 */
	public $block_nesting_level = 0;
	/**
	 * security object
	 *
	 * @var Smarty_Security
	 */
	public $security = null;
	/**
	 * template prefix array
	 *
	 * @var \Smarty_Internal_ParseTree[]
	 */
	public $template_prefix = array();
	/**
	 * security object
	 *
	 * @var \Smarty_Internal_ParseTree[]
	 */
	public $template_postfix = array();
	public $yyTraceFILE;
	public $yyTracePrompt;
	public $yyidx;
	public $yyerrcnt;
	public $yystack = array();
	public $yyTokenName = array(
		'$', 'VERT', 'COLON', 'UNIMATH',
		'PHP', 'TEXT', 'STRIPON', 'STRIPOFF',
		'LITERALSTART', 'LITERALEND', 'LITERAL', 'RDEL',
		'SIMPELOUTPUT', 'LDEL', 'DOLLARID', 'EQUAL',
		'SIMPLETAG', 'ID', 'PTR', 'LDELMAKENOCACHE',
		'LDELIF', 'LDELFOR', 'SEMICOLON', 'INCDEC',
		'TO', 'STEP', 'LDELFOREACH', 'SPACE',
		'AS', 'APTR', 'LDELSETFILTER', 'CLOSETAG',
		'LDELSLASH', 'ATTR', 'INTEGER', 'COMMA',
		'OPENP', 'CLOSEP', 'MATH', 'ISIN',
		'QMARK', 'NOT', 'TYPECAST', 'HEX',
		'DOT', 'INSTANCEOF', 'SINGLEQUOTESTRING', 'DOUBLECOLON',
		'NAMESPACE', 'AT', 'HATCH', 'OPENB',
		'CLOSEB', 'DOLLAR', 'LOGOP', 'SLOGOP',
		'TLOGOP', 'SINGLECOND', 'QUOTE', 'BACKTICK',
		'error', 'start', 'template', 'template_element',
		'smartytag', 'literal', 'text_content', 'literal_elements',
		'literal_element', 'tag', 'variable', 'attributes',
		'value', 'expr', 'varindexed', 'modifierlist',
		'statement', 'statements', 'foraction', 'varvar',
		'modparameters', 'attribute', 'ternary', 'array',
		'tlop', 'lop', 'scond', 'function',
		'ns1', 'doublequoted_with_quotes', 'static_class_access', 'object',
		'arrayindex', 'indexdef', 'varvarele', 'objectchain',
		'objectelement', 'method', 'params', 'modifier',
		'modparameter', 'arrayelements', 'arrayelement', 'doublequoted',
		'doublequotedcontent',
	);                    /* Index of top element in stack */
	/**
	 * internal error flag
	 *
	 * @var bool
	 */
	private $internalError = false;                 /* Shifts left before out of the error */
	private $_retvalue;  /* The parser's stack */
	/**
	 * constructor
	 *
	 * @param Smarty_Internal_Templatelexer $lex
	 * @param Smarty_Internal_TemplateCompilerBase $compiler
	 */
	function __construct(Smarty_Internal_Templatelexer $lex, Smarty_Internal_TemplateCompilerBase $compiler)
	{
		$this->lex = $lex;
		$this->compiler = $compiler;
		$this->template = $this->compiler->template;
		$this->smarty = $this->template->smarty;
		$this->security = isset($this->smarty->security_policy) ? $this->smarty->security_policy : false;
		$this->current_buffer = $this->root_buffer = new Smarty_Internal_ParseTree_Template();
	}

	public static function yy_destructor($yymajor, $yypminor)
	{
		switch ($yymajor) {
			default:
				break;   /* If no destructor action specified: do nothing */
		}
	}

	/**
	 * insert PHP code in current buffer
	 *
	 * @param string $code
	 */
	public function insertPhpCode($code)
	{
		$this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Tag($this, $code));
	}

	/**
	 *  merge PHP code with prefix code and return parse tree tag object
	 *
	 * @param string $code
	 *
	 * @return Smarty_Internal_ParseTree_Tag
	 */
	public function mergePrefixCode($code)
	{
		$tmp = '';
		foreach ($this->compiler->prefix_code as $preCode) {
			$tmp .= $preCode;
		}
		$this->compiler->prefix_code = array();
		$tmp .= $code;
		return new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode($tmp, true));
	}

	public function Trace($TraceFILE, $zTracePrompt)
	{
		if (!$TraceFILE) {
			$zTracePrompt = 0;
		} else if (!$zTracePrompt) {
			$TraceFILE = 0;
		}
		$this->yyTraceFILE = $TraceFILE;
		$this->yyTracePrompt = $zTracePrompt;
	}

	public function PrintTrace()
	{
		$this->yyTraceFILE = fopen('php://output', 'w');
		$this->yyTracePrompt = '<br>';
	}

	public function tokenName($tokenType)
	{
		if ($tokenType === 0) {
			return 'End of Input';
		}
		if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
			return $this->yyTokenName[$tokenType];
		} else {
			return "Unknown";
		}
	}

	public function yy_pop_parser_stack()
	{
		if (empty($this->yystack)) {
			return;
		}
		$yytos = array_pop($this->yystack);
		if ($this->yyTraceFILE && $this->yyidx >= 0) {
			fwrite($this->yyTraceFILE,
				$this->yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
				"\n");
		}
		$yymajor = $yytos->major;
		self::yy_destructor($yymajor, $yytos->minor);
		$this->yyidx--;
		return $yymajor;
	}

	public function __destruct()
	{
		while ($this->yystack !== Array()) {
			$this->yy_pop_parser_stack();
		}
		if (is_resource($this->yyTraceFILE)) {
			fclose($this->yyTraceFILE);
		}
	}

	public function yy_get_expected_tokens($token)
	{
		static $res3 = array();
		static $res4 = array();
		$state = $this->yystack[$this->yyidx]->stateno;
		$expected = self::$yyExpectedTokens[$state];
		if (isset($res3[$state][$token])) {
			if ($res3[$state][$token]) {
				return $expected;
			}
		} else {
			if ($res3[$state][$token] = in_array($token, self::$yyExpectedTokens[$state], true)) {
				return $expected;
			}
		}
		$stack = $this->yystack;
		$yyidx = $this->yyidx;
		do {
			$yyact = $this->yy_find_shift_action($token);
			if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
				// reduce action
				$done = 0;
				do {
					if ($done++ == 100) {
						$this->yyidx = $yyidx;
						$this->yystack = $stack;
						// too much recursion prevents proper detection
						// so give up
						return array_unique($expected);
					}
					$yyruleno = $yyact - self::YYNSTATE;
					$this->yyidx -= self::$yyRuleInfo[$yyruleno][1];
					$nextstate = $this->yy_find_reduce_action(
						$this->yystack[$this->yyidx]->stateno,
						self::$yyRuleInfo[$yyruleno][0]);
					if (isset(self::$yyExpectedTokens[$nextstate])) {
						$expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
						if (isset($res4[$nextstate][$token])) {
							if ($res4[$nextstate][$token]) {
								$this->yyidx = $yyidx;
								$this->yystack = $stack;
								return array_unique($expected);
							}
						} else {
							if ($res4[$nextstate][$token] =
								in_array($token, self::$yyExpectedTokens[$nextstate], true)
							) {
								$this->yyidx = $yyidx;
								$this->yystack = $stack;
								return array_unique($expected);
							}
						}
					}
					if ($nextstate < self::YYNSTATE) {
						// we need to shift a non-terminal
						$this->yyidx++;
						$x = new TP_yyStackEntry;
						$x->stateno = $nextstate;
						$x->major = self::$yyRuleInfo[$yyruleno][0];
						$this->yystack[$this->yyidx] = $x;
						continue 2;
					} else if ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
						$this->yyidx = $yyidx;
						$this->yystack = $stack;
						// the last token was just ignored, we can't accept
						// by ignoring input, this is in essence ignoring a
						// syntax error!
						return array_unique($expected);
					} else if ($nextstate === self::YY_NO_ACTION) {
						$this->yyidx = $yyidx;
						$this->yystack = $stack;
						// input accepted, but not shifted (I guess)
						return $expected;
					} else {
						$yyact = $nextstate;
					}
				} while (true);
			}
			break;
		} while (true);
		$this->yyidx = $yyidx;
		$this->yystack = $stack;
		return array_unique($expected);
	}

	public function yy_is_expected_token($token)
	{
		static $res = array();
		static $res2 = array();
		if ($token === 0) {
			return true; // 0 is not part of this
		}
		$state = $this->yystack[$this->yyidx]->stateno;
		if (isset($res[$state][$token])) {
			if ($res[$state][$token]) {
				return true;
			}
		} else {
			if ($res[$state][$token] = in_array($token, self::$yyExpectedTokens[$state], true)) {
				return true;
			}
		}
		$stack = $this->yystack;
		$yyidx = $this->yyidx;
		do {
			$yyact = $this->yy_find_shift_action($token);
			if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
				// reduce action
				$done = 0;
				do {
					if ($done++ == 100) {
						$this->yyidx = $yyidx;
						$this->yystack = $stack;
						// too much recursion prevents proper detection
						// so give up
						return true;
					}
					$yyruleno = $yyact - self::YYNSTATE;
					$this->yyidx -= self::$yyRuleInfo[$yyruleno][1];
					$nextstate = $this->yy_find_reduce_action(
						$this->yystack[$this->yyidx]->stateno,
						self::$yyRuleInfo[$yyruleno][0]);
					if (isset($res2[$nextstate][$token])) {
						if ($res2[$nextstate][$token]) {
							$this->yyidx = $yyidx;
							$this->yystack = $stack;
							return true;
						}
					} else {
						if ($res2[$nextstate][$token] = (isset(self::$yyExpectedTokens[$nextstate]) &&
							in_array($token,
								self::$yyExpectedTokens[$nextstate],
								true))
						) {
							$this->yyidx = $yyidx;
							$this->yystack = $stack;
							return true;
						}
					}
					if ($nextstate < self::YYNSTATE) {
						// we need to shift a non-terminal
						$this->yyidx++;
						$x = new TP_yyStackEntry;
						$x->stateno = $nextstate;
						$x->major = self::$yyRuleInfo[$yyruleno][0];
						$this->yystack[$this->yyidx] = $x;
						continue 2;
					} else if ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
						$this->yyidx = $yyidx;
						$this->yystack = $stack;
						if (!$token) {
							// end of input: this is valid
							return true;
						}
						// the last token was just ignored, we can't accept
						// by ignoring input, this is in essence ignoring a
						// syntax error!
						return false;
					} else if ($nextstate === self::YY_NO_ACTION) {
						$this->yyidx = $yyidx;
						$this->yystack = $stack;
						// input accepted, but not shifted (I guess)
						return true;
					} else {
						$yyact = $nextstate;
					}
				} while (true);
			}
			break;
		} while (true);
		$this->yyidx = $yyidx;
		$this->yystack = $stack;
		return true;
	}

	public function yy_find_shift_action($iLookAhead)
	{
		$stateno = $this->yystack[$this->yyidx]->stateno;
		/* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
		if (!isset(self::$yy_shift_ofst[$stateno])) {
			// no shift actions
			return self::$yy_default[$stateno];
		}
		$i = self::$yy_shift_ofst[$stateno];
		if ($i === self::YY_SHIFT_USE_DFLT) {
			return self::$yy_default[$stateno];
		}
		if ($iLookAhead == self::YYNOCODE) {
			return self::YY_NO_ACTION;
		}
		$i += $iLookAhead;
		if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
			self::$yy_lookahead[$i] != $iLookAhead
		) {
			if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
				&& ($iFallback = self::$yyFallback[$iLookAhead]) != 0
			) {
				if ($this->yyTraceFILE) {
					fwrite($this->yyTraceFILE,
						$this->yyTracePrompt . "FALLBACK " .
						$this->yyTokenName[$iLookAhead] . " => " .
						$this->yyTokenName[$iFallback] . "\n");
				}
				return $this->yy_find_shift_action($iFallback);
			}
			return self::$yy_default[$stateno];
		} else {
			return self::$yy_action[$i];
		}
	}

	public function yy_find_reduce_action($stateno, $iLookAhead)
	{
		/* $stateno = $this->yystack[$this->yyidx]->stateno; */
		if (!isset(self::$yy_reduce_ofst[$stateno])) {
			return self::$yy_default[$stateno];
		}
		$i = self::$yy_reduce_ofst[$stateno];
		if ($i == self::YY_REDUCE_USE_DFLT) {
			return self::$yy_default[$stateno];
		}
		if ($iLookAhead == self::YYNOCODE) {
			return self::YY_NO_ACTION;
		}
		$i += $iLookAhead;
		if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
			self::$yy_lookahead[$i] != $iLookAhead
		) {
			return self::$yy_default[$stateno];
		} else {
			return self::$yy_action[$i];
		}
	}

	#line 220 "../smarty/lexer/smarty_internal_templateparser.y"
	public function yy_shift($yyNewState, $yyMajor, $yypMinor)
	{
		$this->yyidx++;
		if ($this->yyidx >= self::YYSTACKDEPTH) {
			$this->yyidx--;
			if ($this->yyTraceFILE) {
				fprintf($this->yyTraceFILE, "%sStack Overflow!\n", $this->yyTracePrompt);
			}
			while ($this->yyidx >= 0) {
				$this->yy_pop_parser_stack();
			}
			#line 207 "../smarty/lexer/smarty_internal_templateparser.y"
			$this->internalError = true;
			$this->compiler->trigger_template_error("Stack overflow in template parser");
			return;
		}
		$yytos = new TP_yyStackEntry;
		$yytos->stateno = $yyNewState;
		$yytos->major = $yyMajor;
		$yytos->minor = $yypMinor;
		$this->yystack[] = $yytos;
		if ($this->yyTraceFILE && $this->yyidx > 0) {
			fprintf($this->yyTraceFILE,
				"%sShift %d\n",
				$this->yyTracePrompt,
				$yyNewState);
			fprintf($this->yyTraceFILE, "%sStack:", $this->yyTracePrompt);
			for ($i = 1; $i <= $this->yyidx; $i++) {
				fprintf($this->yyTraceFILE,
					" %s",
					$this->yyTokenName[$this->yystack[$i]->major]);
			}
			fwrite($this->yyTraceFILE, "\n");
		}
	}

	#line 230 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r0()
	{
		$this->root_buffer->prepend_array($this, $this->template_prefix);
		$this->root_buffer->append_array($this, $this->template_postfix);
		$this->_retvalue = $this->root_buffer->to_smarty_php($this);
	}

	#line 237 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r1()
	{
		if ($this->yystack[$this->yyidx + 0]->minor != null) {
			$this->current_buffer->append_subtree($this, $this->yystack[$this->yyidx + 0]->minor);
		}
	}

	#line 251 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r2()
	{
		if ($this->yystack[$this->yyidx + 0]->minor != null) {
			// because of possible code injection
			$this->current_buffer->append_subtree($this, $this->yystack[$this->yyidx + 0]->minor);
		}
	}

	#line 262 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r4()
	{
		if ($this->compiler->has_code) {
			$this->_retvalue = $this->mergePrefixCode($this->yystack[$this->yyidx + 0]->minor);
		} else {
			$this->_retvalue = null;
		}
		$this->compiler->has_variable_string = false;
		$this->block_nesting_level = count($this->compiler->_tag_stack);
	}

	#line 266 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r5()
	{
		$this->_retvalue = new Smarty_Internal_ParseTree_Text($this->yystack[$this->yyidx + 0]->minor);
	}

	#line 277 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r6()
	{
		$code = $this->compiler->compileTag('private_php',
			array(array('code' => $this->yystack[$this->yyidx + 0]->minor),
				array('type' => $this->lex->phpType)),
			array());
		if ($this->compiler->has_code && !empty($code)) {
			$tmp = '';
			foreach ($this->compiler->prefix_code as $code) {
				$tmp .= $code;
			}
			$this->compiler->prefix_code = array();
			$this->_retvalue =
				new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode($tmp . $code, true));
		} else {
			$this->_retvalue = null;
		}
	}

	#line 281 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r7()
	{
		$this->_retvalue = $this->compiler->processText($this->yystack[$this->yyidx + 0]->minor);
	}

	#line 285 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r8()
	{
		$this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
	}

	#line 290 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r9()
	{
		$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor . $this->yystack[$this->yyidx + 0]->minor;
	}

	#line 294 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r10()
	{
		$this->strip = true;
	}

	#line 299 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r11()
	{
		$this->strip = false;
	}

	#line 303 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r12()
	{
		$this->_retvalue = '';
	}

	#line 307 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r13()
	{
		$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
	}

	#line 323 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r14()
	{
		$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor . $this->yystack[$this->yyidx + 0]->minor;
	}

	#line 329 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r18()
	{
		$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
	}

	#line 339 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r19()
	{
		$var =
			trim(substr($this->yystack[$this->yyidx + 0]->minor, $this->lex->ldel_length, -$this->lex->rdel_length),
				' $');
		if (preg_match('/^(.*)(\s+nocache)$/', $var, $match)) {
			$this->_retvalue = $this->compiler->compileTag('private_print_expression',
				array('nocache'),
				array('value' => $this->compiler->compileVariable('\'' .
					$match[1] .
					'\'')));
		} else {
			$this->_retvalue = $this->compiler->compileTag('private_print_expression',
				array(),
				array('value' => $this->compiler->compileVariable('\'' .
					$var .
					'\'')));
		}
	}

	#line 343 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r20()
	{
		$this->_retvalue = $this->compiler->compileTag('private_print_expression',
			array(),
			array('value' => $this->yystack[$this->yyidx + 0]->minor));
	}

	#line 366 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r21()
	{
		$this->_retvalue = $this->compiler->compileTag('private_print_expression',
			$this->yystack[$this->yyidx + 0]->minor,
			array('value' => $this->yystack[$this->yyidx + -1]->minor));
	}

	#line 374 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r26()
	{
		$this->_retvalue = $this->compiler->compileTag('assign',
			array(array('value' => $this->yystack[$this->yyidx +
			0]->minor),
				array('var' => '\'' . substr($this->yystack[$this->yyidx +
					-2]->minor,
						1) . '\'')));
	}

	#line 378 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r28()
	{
		$this->_retvalue = $this->compiler->compileTag('assign',
			array_merge(array(array('value' => $this->yystack[$this->yyidx +
			-1]->minor),
				array('var' => '\'' .
					substr($this->yystack[$this->yyidx +
					-3]->minor,
						1) . '\'')),
				$this->yystack[$this->yyidx + 0]->minor));
	}

	#line 383 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r29()
	{
		$this->_retvalue = $this->compiler->compileTag('assign',
			array_merge(array(array('value' => $this->yystack[$this->yyidx +
			-1]->minor),
				array('var' => $this->yystack[$this->yyidx +
				-3]->minor['var'])),
				$this->yystack[$this->yyidx + 0]->minor),
			array('smarty_internal_index' => $this->yystack[$this->yyidx +
			-3]->minor['smarty_internal_index']));
	}

	#line 405 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r30()
	{
		$tag =
			trim(substr($this->yystack[$this->yyidx + 0]->minor, $this->lex->ldel_length, -$this->lex->rdel_length));
		if ($tag == 'strip') {
			$this->strip = true;
			$this->_retvalue = null;;
		} else {
			if (defined($tag)) {
				if ($this->security) {
					$this->security->isTrustedConstant($tag, $this->compiler);
				}
				$this->_retvalue =
					$this->compiler->compileTag('private_print_expression', array(), array('value' => $tag));
			} else {
				if (preg_match('/^(.*)(\s+nocache)$/', $tag, $match)) {
					$this->_retvalue = $this->compiler->compileTag($match[1], array("'nocache'"));
				} else {
					$this->_retvalue = $this->compiler->compileTag($tag, array());
				}
			}
		}
	}

	#line 415 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r31()
	{
		if (defined($this->yystack[$this->yyidx + -1]->minor)) {
			if ($this->security) {
				$this->security->isTrustedConstant($this->yystack[$this->yyidx + -1]->minor, $this->compiler);
			}
			$this->_retvalue = $this->compiler->compileTag('private_print_expression',
				$this->yystack[$this->yyidx + 0]->minor,
				array('value' => $this->yystack[$this->yyidx +
				-1]->minor));
		} else {
			$this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,
				$this->yystack[$this->yyidx + 0]->minor);
		}
	}

	#line 428 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r32()
	{
		if (defined($this->yystack[$this->yyidx + 0]->minor)) {
			if ($this->security) {
				$this->security->isTrustedConstant($this->yystack[$this->yyidx + 0]->minor, $this->compiler);
			}
			$this->_retvalue = $this->compiler->compileTag('private_print_expression',
				array(),
				array('value' => $this->yystack[$this->yyidx + 0]->minor));
		} else {
			$this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor, array());
		}
	}

	#line 440 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r33()
	{
		if (defined($this->yystack[$this->yyidx + -2]->minor)) {
			if ($this->security) {
				$this->security->isTrustedConstant($this->yystack[$this->yyidx + -2]->minor, $this->compiler);
			}
			$this->_retvalue = $this->compiler->compileTag('private_print_expression',
				$this->yystack[$this->yyidx + 0]->minor,
				array('value' => $this->yystack[$this->yyidx +
				-2]->minor,
					'modifierlist' => $this->yystack[$this->yyidx +
					-1]->minor));
		} else {
			$this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,
				$this->yystack[$this->yyidx + 0]->minor,
				array('modifierlist' => $this->yystack[$this->yyidx +
				-1]->minor));
		}
	}

	#line 445 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r34()
	{
		$this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor,
			$this->yystack[$this->yyidx + 0]->minor,
			array('object_method' => $this->yystack[$this->yyidx +
			-1]->minor));
	}

	#line 450 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r35()
	{
		$this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,
			$this->yystack[$this->yyidx + 0]->minor,
			array('modifierlist' => $this->yystack[$this->yyidx +
			-1]->minor,
				'object_method' => $this->yystack[$this->yyidx +
				-2]->minor));
	}

	#line 455 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r36()
	{
		$this->_retvalue = $this->compiler->compileTag('make_nocache',
			array(array('var' => '\'' . substr($this->yystack[$this->yyidx +
				0]->minor,
					1) . '\'')));
	}

	#line 460 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r37()
	{
		$tag = trim(substr($this->yystack[$this->yyidx + -1]->minor, $this->lex->ldel_length));
		$this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag,
			array(),
			array('if condition' => $this->yystack[$this->yyidx +
			0]->minor));
	}

	#line 465 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r38()
	{
		$tag = trim(substr($this->yystack[$this->yyidx + -2]->minor, $this->lex->ldel_length));
		$this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag,
			$this->yystack[$this->yyidx + 0]->minor,
			array('if condition' => $this->yystack[$this->yyidx +
			-1]->minor));
	}

	#line 476 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r39()
	{
		$tag = trim(substr($this->yystack[$this->yyidx + -1]->minor, $this->lex->ldel_length));
		$this->_retvalue = $this->compiler->compileTag(($tag == 'else if') ? 'elseif' : $tag,
			array(),
			array('if condition' => $this->yystack[$this->yyidx +
			0]->minor));
	}

	#line 480 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r41()
	{
		$this->_retvalue = $this->compiler->compileTag('for',
			array_merge($this->yystack[$this->yyidx + 0]->minor,
				array(array('start' => $this->yystack[$this->yyidx +
				-6]->minor),
					array('ifexp' => $this->yystack[$this->yyidx +
					-4]->minor),
					array('var' => $this->yystack[$this->yyidx +
					-2]->minor),
					array('step' => $this->yystack[$this->yyidx +
					-1]->minor))),
			1);
	}

	#line 488 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r42()
	{
		$this->_retvalue = '=' . $this->yystack[$this->yyidx + 0]->minor;
	}

	#line 492 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r44()
	{
		$this->_retvalue = $this->compiler->compileTag('for',
			array_merge($this->yystack[$this->yyidx + 0]->minor,
				array(array('start' => $this->yystack[$this->yyidx +
				-3]->minor),
					array('to' => $this->yystack[$this->yyidx +
					-1]->minor))),
			0);
	}

	#line 497 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r45()
	{
		$this->_retvalue = $this->compiler->compileTag('for',
			array_merge($this->yystack[$this->yyidx + 0]->minor,
				array(array('start' => $this->yystack[$this->yyidx +
				-5]->minor),
					array('to' => $this->yystack[$this->yyidx +
					-3]->minor),
					array('step' => $this->yystack[$this->yyidx +
					-1]->minor))),
			0);
	}

	#line 501 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r46()
	{
		$this->_retvalue = $this->compiler->compileTag('foreach',
			array_merge($this->yystack[$this->yyidx + 0]->minor,
				array(array('from' => $this->yystack[$this->yyidx +
				-3]->minor),
					array('item' => $this->yystack[$this->yyidx +
					-1]->minor))));
	}

	#line 504 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r47()
	{
		$this->_retvalue = $this->compiler->compileTag('foreach',
			array_merge($this->yystack[$this->yyidx + 0]->minor,
				array(array('from' => $this->yystack[$this->yyidx +
				-5]->minor),
					array('item' => $this->yystack[$this->yyidx +
					-1]->minor),
					array('key' => $this->yystack[$this->yyidx +
					-3]->minor))));
	}

	#line 509 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r48()
	{
		$this->_retvalue = $this->compiler->compileTag('foreach', $this->yystack[$this->yyidx + 0]->minor);
	}

	#line 513 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r49()
	{
		$this->_retvalue = $this->compiler->compileTag('setfilter',
			array(),
			array('modifier_list' => array(array_merge(array($this->yystack[$this->yyidx +
			-1]->minor),
				$this->yystack[$this->yyidx +
				0]->minor))));
	}

	#line 519 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r50()
	{
		$this->_retvalue = $this->compiler->compileTag('setfilter',
			array(),
			array('modifier_list' => array_merge(array(array_merge(array($this->yystack[$this->yyidx +
			-2]->minor),
				$this->yystack[$this->yyidx +
				-1]->minor)),
				$this->yystack[$this->yyidx +
				0]->minor)));
	}

	#line 528 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r51()
	{
		$tag =
			trim(substr($this->yystack[$this->yyidx + 0]->minor, $this->lex->ldel_length, -$this->lex->rdel_length),
				' /');
		if ($tag == 'strip') {
			$this->strip = false;
			$this->_retvalue = null;
		} else {
			$this->_retvalue = $this->compiler->compileTag($tag . 'close', array());
		}
	}

	#line 532 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r52()
	{
		$this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor . 'close', array());
	}

	#line 537 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r53()
	{
		$this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor . 'close',
			array(),
			array('modifier_list' => $this->yystack[$this->yyidx +
			0]->minor));
	}

	#line 541 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r54()
	{
		$this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor . 'close',
			array(),
			array('object_method' => $this->yystack[$this->yyidx +
			0]->minor));
	}

	#line 549 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r55()
	{
		$this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor . 'close',
			array(),
			array('object_method' => $this->yystack[$this->yyidx +
			-1]->minor,
				'modifier_list' => $this->yystack[$this->yyidx +
				0]->minor));
	}

	#line 555 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r56()
	{
		$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
		$this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
	}

	#line 560 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r57()
	{
		$this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
	}

	#line 565 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r58()
	{
		$this->_retvalue = array();
	}

	#line 576 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r59()
	{
		if (defined($this->yystack[$this->yyidx + 0]->minor)) {
			if ($this->security) {
				$this->security->isTrustedConstant($this->yystack[$this->yyidx + 0]->minor, $this->compiler);
			}
			$this->_retvalue =
				array($this->yystack[$this->yyidx + -2]->minor => $this->yystack[$this->yyidx + 0]->minor);
		} else {
			$this->_retvalue =
				array($this->yystack[$this->yyidx + -2]->minor => '\'' . $this->yystack[$this->yyidx + 0]->minor .
					'\'');
		}
	}

	#line 584 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r60()
	{
		$this->_retvalue =
			array(trim($this->yystack[$this->yyidx + -1]->minor, " =\n\r\t") => $this->yystack[$this->yyidx +
			0]->minor);
	}

	#line 596 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r62()
	{
		$this->_retvalue = '\'' . $this->yystack[$this->yyidx + 0]->minor . '\'';
	}

	#line 609 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r65()
	{
		$this->_retvalue =
			array($this->yystack[$this->yyidx + -2]->minor => $this->yystack[$this->yyidx + 0]->minor);
	}

	#line 614 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r67()
	{
		$this->yystack[$this->yyidx + -2]->minor[] = $this->yystack[$this->yyidx + 0]->minor;
		$this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
	}

	#line 621 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r68()
	{
		$this->_retvalue = array('var' => '\'' . substr($this->yystack[$this->yyidx + -2]->minor, 1) . '\'',
			'value' => $this->yystack[$this->yyidx + 0]->minor);
	}

	#line 645 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r70()
	{
		$this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor,
			'value' => $this->yystack[$this->yyidx + 0]->minor);
	}

	#line 650 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r74()
	{
		$this->_retvalue =
			'$_smarty_tpl->getStreamVariable(\'' . substr($this->yystack[$this->yyidx + -2]->minor, 1) . '://' .
			$this->yystack[$this->yyidx + 0]->minor . '\')';
	}

	#line 664 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r75()
	{
		$this->_retvalue =
			$this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) .
			$this->yystack[$this->yyidx + 0]->minor;
	}

	#line 670 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r78()
	{
		$this->_retvalue = $this->compiler->compileTag('private_modifier',
			array(),
			array('value' => $this->yystack[$this->yyidx +
			-1]->minor,
				'modifierlist' => $this->yystack[$this->yyidx +
				0]->minor));
	}

	#line 674 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r79()
	{
		$this->_retvalue =
			$this->yystack[$this->yyidx + -1]->minor['pre'] . $this->yystack[$this->yyidx + -2]->minor .
			$this->yystack[$this->yyidx + -1]->minor['op'] . $this->yystack[$this->yyidx + 0]->minor . ')';
	}

	#line 678 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r80()
	{
		$this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . $this->yystack[$this->yyidx + -1]->minor .
			$this->yystack[$this->yyidx + 0]->minor;
	}

	#line 682 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r81()
	{
		$this->_retvalue = $this->yystack[$this->yyidx + 0]->minor . $this->yystack[$this->yyidx + -1]->minor . ')';
	}

	#line 686 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r82()
	{
		$this->_retvalue =
			'in_array(' . $this->yystack[$this->yyidx + -2]->minor . ',' . $this->yystack[$this->yyidx + 0]->minor .
			')';
	}

	#line 694 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r83()
	{
		$this->_retvalue = 'in_array(' . $this->yystack[$this->yyidx + -2]->minor . ',(array)' .
			$this->yystack[$this->yyidx + 0]->minor . ')';
	}

	#line 698 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r84()
	{
		$this->_retvalue = $this->yystack[$this->yyidx + -5]->minor . ' ? ' . $this->compiler->compileVariable('\'' .
				substr($this->yystack[$this->yyidx +
				-2]->minor,
					1) .
				'\'') .
			' : ' . $this->yystack[$this->yyidx + 0]->minor;
	}

	#line 713 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r85()
	{
		$this->_retvalue =
			$this->yystack[$this->yyidx + -5]->minor . ' ? ' . $this->yystack[$this->yyidx + -2]->minor . ' : ' .
			$this->yystack[$this->yyidx + 0]->minor;
	}

	#line 734 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r88()
	{
		$this->_retvalue = '!' . $this->yystack[$this->yyidx + 0]->minor;
	}

	#line 738 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r93()
	{
		$this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . '.' . $this->yystack[$this->yyidx + 0]->minor;
	}

	#line 742 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r94()
	{
		$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor . '.';
	}

	#line 747 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r95()
	{
		$this->_retvalue = '.' . $this->yystack[$this->yyidx + 0]->minor;
	}

	#line 764 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r96()
	{
		if (defined($this->yystack[$this->yyidx + 0]->minor)) {
			if ($this->security) {
				$this->security->isTrustedConstant($this->yystack[$this->yyidx + 0]->minor, $this->compiler);
			}
			$this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
		} else {
			$this->_retvalue = '\'' . $this->yystack[$this->yyidx + 0]->minor . '\'';
		}
	}

	#line 768 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r98()
	{
		$this->_retvalue = "(" . $this->yystack[$this->yyidx + -1]->minor . ")";
	}

	#line 786 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r99()
	{
		$this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . $this->yystack[$this->yyidx + -1]->minor .
			$this->yystack[$this->yyidx + 0]->minor;
	}

	#line 797 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r103()
	{
		$prefixVar = $this->compiler->getNewPrefixVariable();
		if ($this->yystack[$this->yyidx + -2]->minor['var'] == '\'smarty\'') {
			$this->compiler->appendPrefixCode("<?php $prefixVar" . ' = ' .
				$this->compiler->compileTag('private_special_variable',
					array(),
					$this->yystack[$this->yyidx +
					-2]->minor['smarty_internal_index']) .
				';?>');
		} else {
			$this->compiler->appendPrefixCode("<?php $prefixVar" . ' = ' .
				$this->compiler->compileVariable($this->yystack[$this->yyidx +
				-2]->minor['var']) .
				$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index'] .
				';?>');
		}
		$this->_retvalue = $prefixVar . '::' . $this->yystack[$this->yyidx + 0]->minor[0] .
			$this->yystack[$this->yyidx + 0]->minor[1];
	}

	#line 814 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r104()
	{
		$prefixVar = $this->compiler->getNewPrefixVariable();
		$tmp = $this->compiler->appendCode('<?php ob_start();?>', $this->yystack[$this->yyidx + 0]->minor);
		$this->compiler->appendPrefixCode($this->compiler->appendCode($tmp, "<?php $prefixVar" . '=ob_get_clean();?>'));
		$this->_retvalue = $prefixVar;
	}

	#line 833 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r107()
	{
		if (!in_array(strtolower($this->yystack[$this->yyidx + -2]->minor), array('self', 'parent')) &&
			(!$this->security || $this->security->isTrustedStaticClassAccess($this->yystack[$this->yyidx + -2]->minor,
					$this->yystack[$this->yyidx + 0]->minor,
					$this->compiler))
		) {
			if (isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor])) {
				$this->_retvalue =
					$this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor] . '::' .
					$this->yystack[$this->yyidx + 0]->minor[0] . $this->yystack[$this->yyidx + 0]->minor[1];
			} else {
				$this->_retvalue =
					$this->yystack[$this->yyidx + -2]->minor . '::' . $this->yystack[$this->yyidx + 0]->minor[0] .
					$this->yystack[$this->yyidx + 0]->minor[1];
			}
		} else {
			$this->compiler->trigger_template_error("static class '" . $this->yystack[$this->yyidx + -2]->minor .
				"' is undefined or not allowed by security setting");
		}
	}

	#line 844 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r109()
	{
		$this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
	}

	#line 847 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r110()
	{
		$this->_retvalue =
			$this->compiler->compileVariable('\'' . substr($this->yystack[$this->yyidx + 0]->minor, 1) . '\'');
	}

	#line 860 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r111()
	{
		if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') {
			$smarty_var = $this->compiler->compileTag('private_special_variable',
				array(),
				$this->yystack[$this->yyidx +
				0]->minor['smarty_internal_index']);
			$this->_retvalue = $smarty_var;
		} else {
			// used for array reset,next,prev,end,current
			$this->last_variable = $this->yystack[$this->yyidx + 0]->minor['var'];
			$this->last_index = $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
			$this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']) .
				$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
		}
	}

	#line 870 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r112()
	{
		$this->_retvalue = '$_smarty_tpl->tpl_vars[' . $this->yystack[$this->yyidx + -2]->minor . ']->' .
			$this->yystack[$this->yyidx + 0]->minor;
	}

	#line 874 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r114()
	{
		$this->_retvalue =
			$this->compiler->compileConfigVariable("'" . $this->yystack[$this->yyidx + -1]->minor . "'");
	}

	#line 878 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r115()
	{
		$this->_retvalue = '(is_array($tmp = ' .
			$this->compiler->compileConfigVariable("'" . $this->yystack[$this->yyidx + -2]->minor .
				"'") . ') ? $tmp' .
			$this->yystack[$this->yyidx + 0]->minor . ' :null)';
	}

	#line 882 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r116()
	{
		$this->_retvalue = $this->compiler->compileConfigVariable($this->yystack[$this->yyidx + -1]->minor);
	}

	#line 886 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r117()
	{
		$this->_retvalue =
			'(is_array($tmp = ' . $this->compiler->compileConfigVariable($this->yystack[$this->yyidx + -2]->minor) .
			') ? $tmp' . $this->yystack[$this->yyidx + 0]->minor . ' : null)';
	}

	#line 889 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r118()
	{
		$this->_retvalue = array('var' => '\'' .
			substr($this->yystack[$this->yyidx + -1]->minor, 1) .
			'\'',
			'smarty_internal_index' => $this->yystack[$this->yyidx + 0]->minor);
	}

	#line 902 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r119()
	{
		$this->_retvalue = array('var' => $this->yystack[$this->yyidx + -1]->minor,
			'smarty_internal_index' => $this->yystack[$this->yyidx + 0]->minor);
	}

	#line 908 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r121()
	{
		return;
	}

	#line 911 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r122()
	{
		$this->_retvalue =
			'[' . $this->compiler->compileVariable('\'' . substr($this->yystack[$this->yyidx + 0]->minor, 1) . '\'') .
			']';
	}

	#line 915 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r123()
	{
		$this->_retvalue = '[' . $this->compiler->compileVariable($this->yystack[$this->yyidx + 0]->minor) . ']';
	}

	#line 919 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r124()
	{
		$this->_retvalue = '[' . $this->compiler->compileVariable($this->yystack[$this->yyidx + -2]->minor) . '->' .
			$this->yystack[$this->yyidx + 0]->minor . ']';
	}

	#line 923 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r125()
	{
		$this->_retvalue = "['" . $this->yystack[$this->yyidx + 0]->minor . "']";
	}

	#line 928 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r126()
	{
		$this->_retvalue = '[' . $this->yystack[$this->yyidx + 0]->minor . ']';
	}

	#line 933 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r127()
	{
		$this->_retvalue = '[' . $this->yystack[$this->yyidx + -1]->minor . ']';
	}

	#line 937 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r128()
	{
		$this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable',
				array(),
				'[\'section\'][\'' .
				$this->yystack[$this->yyidx + -1]->minor .
				'\'][\'index\']') . ']';
	}

	#line 940 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r129()
	{
		$this->_retvalue = '[' . $this->compiler->compileTag('private_special_variable',
				array(),
				'[\'section\'][\'' .
				$this->yystack[$this->yyidx + -3]->minor . '\'][\'' .
				$this->yystack[$this->yyidx + -1]->minor . '\']') . ']';
	}

	#line 946 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r130()
	{
		$this->_retvalue = '[' . $this->yystack[$this->yyidx + -1]->minor . ']';
	}

	#line 962 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r132()
	{
		$this->_retvalue = '[' . $this->compiler->compileVariable('\'' .
				substr($this->yystack[$this->yyidx + -1]->minor,
					1) . '\'') . ']';;
	}

	#line 972 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r136()
	{
		$this->_retvalue = '[]';
	}

	#line 976 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r137()
	{
		$this->_retvalue = '\'' . substr($this->yystack[$this->yyidx + 0]->minor, 1) . '\'';
	}

	#line 981 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r138()
	{
		$this->_retvalue = "''";
	}

	#line 989 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r139()
	{
		$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor . '.' . $this->yystack[$this->yyidx + 0]->minor;
	}

	#line 995 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r141()
	{
		$var =
			trim(substr($this->yystack[$this->yyidx + 0]->minor, $this->lex->ldel_length, -$this->lex->rdel_length),
				' $');
		$this->_retvalue = $this->compiler->compileVariable('\'' . $var . '\'');
	}

	#line 1002 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r142()
	{
		$this->_retvalue = '(' . $this->yystack[$this->yyidx + -1]->minor . ')';
	}

	#line 1011 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r143()
	{
		if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') {
			$this->_retvalue = $this->compiler->compileTag('private_special_variable',
					array(),
					$this->yystack[$this->yyidx +
					-1]->minor['smarty_internal_index']) .
				$this->yystack[$this->yyidx + 0]->minor;
		} else {
			$this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + -1]->minor['var']) .
				$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'] .
				$this->yystack[$this->yyidx + 0]->minor;
		}
	}

	#line 1016 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r144()
	{
		$this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
	}

	#line 1021 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r145()
	{
		$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor . $this->yystack[$this->yyidx + 0]->minor;
	}

	#line 1028 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r146()
	{
		if ($this->security && substr($this->yystack[$this->yyidx + -1]->minor, 0, 1) == '_') {
			$this->compiler->trigger_template_error(self::Err1);
		}
		$this->_retvalue =
			'->' . $this->yystack[$this->yyidx + -1]->minor . $this->yystack[$this->yyidx + 0]->minor;
	}

	#line 1035 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r147()
	{
		if ($this->security) {
			$this->compiler->trigger_template_error(self::Err2);
		}
		$this->_retvalue = '->{' . $this->compiler->compileVariable($this->yystack[$this->yyidx + -1]->minor) .
			$this->yystack[$this->yyidx + 0]->minor . '}';
	}

	#line 1042 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r148()
	{
		if ($this->security) {
			$this->compiler->trigger_template_error(self::Err2);
		}
		$this->_retvalue =
			'->{' . $this->yystack[$this->yyidx + -2]->minor . $this->yystack[$this->yyidx + 0]->minor . '}';
	}

	#line 1050 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r149()
	{
		if ($this->security) {
			$this->compiler->trigger_template_error(self::Err2);
		}
		$this->_retvalue =
			'->{\'' . $this->yystack[$this->yyidx + -4]->minor . '\'.' . $this->yystack[$this->yyidx + -2]->minor .
			$this->yystack[$this->yyidx + 0]->minor . '}';
	}

	#line 1058 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r150()
	{
		$this->_retvalue = '->' . $this->yystack[$this->yyidx + 0]->minor;
	}

	#line 1066 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r151()
	{
		$this->_retvalue = $this->compiler->compilePHPFunctionCall($this->yystack[$this->yyidx + -3]->minor,
			$this->yystack[$this->yyidx + -1]->minor);
	}

	#line 1073 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r152()
	{
		if ($this->security && substr($this->yystack[$this->yyidx + -3]->minor, 0, 1) == '_') {
			$this->compiler->trigger_template_error(self::Err1);
		}
		$this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(" .
			implode(',', $this->yystack[$this->yyidx + -1]->minor) . ")";
	}

	#line 1084 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r153()
	{
		if ($this->security) {
			$this->compiler->trigger_template_error(self::Err2);
		}
		$prefixVar = $this->compiler->getNewPrefixVariable();
		$this->compiler->appendPrefixCode("<?php $prefixVar" . '=' . $this->compiler->compileVariable('\'' .
				substr($this->yystack[$this->yyidx +
				-3]->minor,
					1) .
				'\'') . ';?>');
		$this->_retvalue = $prefixVar . '(' . implode(',', $this->yystack[$this->yyidx + -1]->minor) . ')';
	}

	#line 1101 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r154()
	{
		$this->_retvalue =
			array_merge($this->yystack[$this->yyidx + -2]->minor, array($this->yystack[$this->yyidx + 0]->minor));
	}

	#line 1105 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r157()
	{
		$this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,
			array(array_merge($this->yystack[$this->yyidx + -1]->minor,
				$this->yystack[$this->yyidx + 0]->minor)));
	}

	#line 1113 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r158()
	{
		$this->_retvalue =
			array(array_merge($this->yystack[$this->yyidx + -1]->minor, $this->yystack[$this->yyidx + 0]->minor));
	}

	#line 1121 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r160()
	{
		$this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
	}

	#line 1140 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r161()
	{
		$this->_retvalue =
			array_merge($this->yystack[$this->yyidx + -1]->minor, $this->yystack[$this->yyidx + 0]->minor);
	}

	#line 1145 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r165()
	{
		$this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor, '', 'method');
	}

	#line 1150 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r166()
	{
		$this->_retvalue =
			array($this->yystack[$this->yyidx + -1]->minor, $this->yystack[$this->yyidx + 0]->minor, 'method');
	}

	#line 1155 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r167()
	{
		$this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor, '');
	}

	#line 1160 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r168()
	{
		$this->_retvalue =
			array($this->yystack[$this->yyidx + -1]->minor, $this->yystack[$this->yyidx + 0]->minor, 'property');
	}

	#line 1166 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r169()
	{
		$this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor,
			$this->yystack[$this->yyidx + -1]->minor . $this->yystack[$this->yyidx + 0]->minor,
			'property');
	}

	#line 1170 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r170()
	{
		$this->_retvalue = ' ' . trim($this->yystack[$this->yyidx + 0]->minor) . ' ';
	}

	#line 1189 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r171()
	{
		static $lops = array(
			'eq' => ' == ',
			'ne' => ' != ',
			'neq' => ' != ',
			'gt' => ' > ',
			'ge' => ' >= ',
			'gte' => ' >= ',
			'lt' => ' < ',
			'le' => ' <= ',
			'lte' => ' <= ',
			'mod' => ' % ',
			'and' => ' && ',
			'or' => ' || ',
			'xor' => ' xor ',
		);
		$op = strtolower(preg_replace('/\s*/', '', $this->yystack[$this->yyidx + 0]->minor));
		$this->_retvalue = $lops[$op];
	}

	#line 1202 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r172()
	{
		static $tlops = array(
			'isdivby' => array('op' => ' % ', 'pre' => '!('),
			'isnotdivby' => array('op' => ' % ', 'pre' => '('),
			'isevenby' => array('op' => ' / ', 'pre' => '!(1 & '),
			'isnotevenby' => array('op' => ' / ', 'pre' => '(1 & '),
			'isoddby' => array('op' => ' / ', 'pre' => '(1 & '),
			'isnotoddby' => array('op' => ' / ', 'pre' => '!(1 & '),
		);
		$op = strtolower(preg_replace('/\s*/', '', $this->yystack[$this->yyidx + 0]->minor));
		$this->_retvalue = $tlops[$op];
	}

	#line 1216 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r173()
	{
		static $scond = array(
			'iseven' => '!(1 & ',
			'isnoteven' => '(1 & ',
			'isodd' => '(1 & ',
			'isnotodd' => '!(1 & ',
		);
		$op = strtolower(str_replace(' ', '', $this->yystack[$this->yyidx + 0]->minor));
		$this->_retvalue = $scond[$op];
	}

	#line 1224 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r174()
	{
		$this->_retvalue = 'array(' . $this->yystack[$this->yyidx + -1]->minor . ')';
	}

	#line 1232 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r176()
	{
		$this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . ',' . $this->yystack[$this->yyidx + 0]->minor;
	}

	#line 1236 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r178()
	{
		$this->_retvalue =
			$this->yystack[$this->yyidx + -2]->minor . '=>' . $this->yystack[$this->yyidx + 0]->minor;
	}

	#line 1252 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r179()
	{
		$this->_retvalue =
			'\'' . $this->yystack[$this->yyidx + -2]->minor . '\'=>' . $this->yystack[$this->yyidx + 0]->minor;
	}

	#line 1257 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r182()
	{
		$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor->to_smarty_php($this);
	}

	#line 1262 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r183()
	{
		$this->yystack[$this->yyidx + -1]->minor->append_subtree($this, $this->yystack[$this->yyidx + 0]->minor);
		$this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
	}

	#line 1266 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r184()
	{
		$this->_retvalue = new Smarty_Internal_ParseTree_Dq($this, $this->yystack[$this->yyidx + 0]->minor);
	}

	#line 1274 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r185()
	{
		$this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)' . $this->yystack[$this->yyidx + -1]->minor);
	}

	#line 1278 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r187()
	{
		$this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)$_smarty_tpl->tpl_vars[\'' .
			substr($this->yystack[$this->yyidx + 0]->minor, 1) .
			'\']->value');
	}

	#line 1285 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r188()
	{
		if ($this->template->caching && $this->compiler->tag_nocache) {
			$this->compiler->tag_nocache_save = true;
		}
		$this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)' . ($this->template->caching &&
			$this->compiler->tag_nocache ?
				$this->compiler->newPrefixCode($this->yystack[$this->yyidx +
				-1]->minor) :
				$this->yystack[$this->yyidx + -1]->minor));
	}

	#line 1289 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r189()
	{
		$this->_retvalue =
			new Smarty_Internal_ParseTree_Code('(string)(' . $this->yystack[$this->yyidx + -1]->minor . ')');
	}

	#line 1293 "../smarty/lexer/smarty_internal_templateparser.y"
	function yy_r190()
	{
		$this->_retvalue = new Smarty_Internal_ParseTree_Tag($this, $this->yystack[$this->yyidx + 0]->minor);
	}

	function yy_r191()
	{
		$this->_retvalue = new Smarty_Internal_ParseTree_DqContent($this->yystack[$this->yyidx + 0]->minor);
	}

	public function yy_reduce($yyruleno)
	{
		if ($this->yyTraceFILE && $yyruleno >= 0
			&& $yyruleno < count(self::$yyRuleName)
		) {
			fprintf($this->yyTraceFILE,
				"%sReduce (%d) [%s].\n",
				$this->yyTracePrompt,
				$yyruleno,
				self::$yyRuleName[$yyruleno]);
		}
		$this->_retvalue = $yy_lefthand_side = null;
		if (isset(self::$yyReduceMap[$yyruleno])) {
			// call the action
			$this->_retvalue = null;
			$this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
			$yy_lefthand_side = $this->_retvalue;
		}
		$yygoto = self::$yyRuleInfo[$yyruleno][0];
		$yysize = self::$yyRuleInfo[$yyruleno][1];
		$this->yyidx -= $yysize;
		for ($i = $yysize; $i; $i--) {
			// pop all of the right-hand side parameters
			array_pop($this->yystack);
		}
		$yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
		if ($yyact < self::YYNSTATE) {
			if (!$this->yyTraceFILE && $yysize) {
				$this->yyidx++;
				$x = new TP_yyStackEntry;
				$x->stateno = $yyact;
				$x->major = $yygoto;
				$x->minor = $yy_lefthand_side;
				$this->yystack[$this->yyidx] = $x;
			} else {
				$this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
			}
		} else if ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
			$this->yy_accept();
		}
	}

	public function yy_parse_failed()
	{
		if ($this->yyTraceFILE) {
			fprintf($this->yyTraceFILE, "%sFail!\n", $this->yyTracePrompt);
		}
		while ($this->yyidx >= 0) {
			$this->yy_pop_parser_stack();
		}
	}

	public function yy_syntax_error($yymajor, $TOKEN)
	{
		#line 200 "../smarty/lexer/smarty_internal_templateparser.y"
		$this->internalError = true;
		$this->yymajor = $yymajor;
		$this->compiler->trigger_template_error();
	}

	public function yy_accept()
	{
		if ($this->yyTraceFILE) {
			fprintf($this->yyTraceFILE, "%sAccept!\n", $this->yyTracePrompt);
		}
		while ($this->yyidx >= 0) {
			$this->yy_pop_parser_stack();
		}
		#line 193 "../smarty/lexer/smarty_internal_templateparser.y"
		$this->successful = !$this->internalError;
		$this->internalError = false;
		$this->retvalue = $this->_retvalue;
	}

	public function doParse($yymajor, $yytokenvalue)
	{
		$yyerrorhit = 0;   /* True if yymajor has invoked an error */
		if ($this->yyidx === null || $this->yyidx < 0) {
			$this->yyidx = 0;
			$this->yyerrcnt = -1;
			$x = new TP_yyStackEntry;
			$x->stateno = 0;
			$x->major = 0;
			$this->yystack = array();
			$this->yystack[] = $x;
		}
		$yyendofinput = ($yymajor == 0);
		if ($this->yyTraceFILE) {
			fprintf($this->yyTraceFILE,
				"%sInput %s\n",
				$this->yyTracePrompt,
				$this->yyTokenName[$yymajor]);
		}
		do {
			$yyact = $this->yy_find_shift_action($yymajor);
			if ($yymajor < self::YYERRORSYMBOL &&
				!$this->yy_is_expected_token($yymajor)
			) {
				// force a syntax error
				$yyact = self::YY_ERROR_ACTION;
			}
			if ($yyact < self::YYNSTATE) {
				$this->yy_shift($yyact, $yymajor, $yytokenvalue);
				$this->yyerrcnt--;
				if ($yyendofinput && $this->yyidx >= 0) {
					$yymajor = 0;
				} else {
					$yymajor = self::YYNOCODE;
				}
			} else if ($yyact < self::YYNSTATE + self::YYNRULE) {
				$this->yy_reduce($yyact - self::YYNSTATE);
			} else if ($yyact == self::YY_ERROR_ACTION) {
				if ($this->yyTraceFILE) {
					fprintf($this->yyTraceFILE,
						"%sSyntax Error!\n",
						$this->yyTracePrompt);
				}
				if (self::YYERRORSYMBOL) {
					if ($this->yyerrcnt < 0) {
						$this->yy_syntax_error($yymajor, $yytokenvalue);
					}
					$yymx = $this->yystack[$this->yyidx]->major;
					if ($yymx == self::YYERRORSYMBOL || $yyerrorhit) {
						if ($this->yyTraceFILE) {
							fprintf($this->yyTraceFILE,
								"%sDiscard input token %s\n",
								$this->yyTracePrompt,
								$this->yyTokenName[$yymajor]);
						}
						$this->yy_destructor($yymajor, $yytokenvalue);
						$yymajor = self::YYNOCODE;
					} else {
						while ($this->yyidx >= 0 &&
							$yymx != self::YYERRORSYMBOL &&
							($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
						) {
							$this->yy_pop_parser_stack();
						}
						if ($this->yyidx < 0 || $yymajor == 0) {
							$this->yy_destructor($yymajor, $yytokenvalue);
							$this->yy_parse_failed();
							$yymajor = self::YYNOCODE;
						} else if ($yymx != self::YYERRORSYMBOL) {
							$u2 = 0;
							$this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
						}
					}
					$this->yyerrcnt = 3;
					$yyerrorhit = 1;
				} else {
					if ($this->yyerrcnt <= 0) {
						$this->yy_syntax_error($yymajor, $yytokenvalue);
					}
					$this->yyerrcnt = 3;
					$this->yy_destructor($yymajor, $yytokenvalue);
					if ($yyendofinput) {
						$this->yy_parse_failed();
					}
					$yymajor = self::YYNOCODE;
				}
			} else {
				$this->yy_accept();
				$yymajor = self::YYNOCODE;
			}
		} while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
	}
}

